{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n// NgRx\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n// Core Module\nimport { CoreModule } from './core/core.module';\n// Shared Module\nimport { SharedModule } from './shared/shared.module';\n// App Components\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n// Root Reducers and Effects\nimport { reducers, metaReducers } from './store';\nimport { AppEffects } from './store/effects/app.effects';\n// Interceptors\nimport { JwtInterceptor } from './core/interceptors/jwt.interceptor';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { CacheInterceptor } from './core/interceptors/cache.interceptor';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, HttpClientModule, RouterModule, AppRoutingModule,\n  // Core and Shared Modules\n  CoreModule, SharedModule,\n  // NgRx\n  StoreModule.forRoot(reducers, {\n    metaReducers\n  }), EffectsModule.forRoot([AppEffects]), StoreDevtoolsModule.instrument({\n    maxAge: 25,\n    logOnly: !isDevMode(),\n    autoPause: true // Pause recording actions and state changes when the extension window is not open\n  }),\n  // PWA\n  ServiceWorkerModule.register('ngsw-worker.js', {\n    enabled: !isDevMode(),\n    // Register the ServiceWorker as soon as the application is stable\n    // or after 30 seconds (whichever comes first).\n    registrationStrategy: 'registerWhenStable:30000'\n  })],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: JwtInterceptor,\n    multi: true\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: CacheInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}