{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nlet NotificationService = /*#__PURE__*/(() => {\n  class NotificationService {\n    constructor(snackBar) {\n      this.snackBar = snackBar;\n    }\n    show(message, duration = 3000) {\n      this.snackBar.open(message, 'Close', {\n        duration: duration,\n        verticalPosition: 'top',\n        horizontalPosition: 'right'\n      });\n    }\n    success(message, duration = 3000) {\n      this.snackBar.open(message, 'Close', {\n        duration: duration,\n        panelClass: ['notification-success'],\n        verticalPosition: 'top',\n        horizontalPosition: 'right'\n      });\n    }\n    error(message, duration = 5000) {\n      this.snackBar.open(message, 'Close', {\n        duration: duration,\n        panelClass: ['notification-error'],\n        verticalPosition: 'top',\n        horizontalPosition: 'right'\n      });\n    }\n    info(message, duration = 4000) {\n      this.snackBar.open(message, 'Close', {\n        duration: duration,\n        panelClass: ['notification-info'],\n        verticalPosition: 'top',\n        horizontalPosition: 'right'\n      });\n    }\n    warn(message, duration = 4000) {\n      this.snackBar.open(message, 'Close', {\n        duration: duration,\n        panelClass: ['notification-warn'],\n        verticalPosition: 'top',\n        horizontalPosition: 'right'\n      });\n    }\n    // Aliases for consistency with other parts of the app\n    showSuccess(message, duration = 3000) {\n      this.success(message, duration);\n    }\n    showError(message, duration = 5000) {\n      this.error(message, duration);\n    }\n    showInfo(message, duration = 4000) {\n      this.info(message, duration);\n    }\n    showWarning(message, duration = 4000) {\n      this.warn(message, duration);\n    }\n    static {\n      this.ɵfac = function NotificationService_Factory(t) {\n        return new (t || NotificationService)(i0.ɵɵinject(i1.MatSnackBar));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: NotificationService,\n        factory: NotificationService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return NotificationService;\n})();\nexport { NotificationService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}