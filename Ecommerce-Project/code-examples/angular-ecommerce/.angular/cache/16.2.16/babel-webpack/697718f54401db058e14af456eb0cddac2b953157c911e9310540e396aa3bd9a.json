{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { checkAuthStatus } from './store/actions/auth.actions';\nimport { selectIsLoading } from './store/selectors/ui.selectors';\nimport { selectIsAuthenticated, selectCurrentUser } from './store/selectors/auth.selectors';\nimport { selectCartItemCount } from './store/selectors/cart.selectors';\nlet AppComponent = class AppComponent {\n  constructor(store, router, swUpdate) {\n    this.store = store;\n    this.router = router;\n    this.swUpdate = swUpdate;\n    this.updateAvailable = false;\n    this.isLoading$ = this.store.select(selectIsLoading);\n    this.isAuthenticated$ = this.store.select(selectIsAuthenticated);\n    this.currentUser$ = this.store.select(selectCurrentUser);\n    this.cartItemCount$ = this.store.select(selectCartItemCount);\n  }\n  ngOnInit() {\n    // Check authentication status on app load\n    this.store.dispatch(checkAuthStatus());\n    // Scroll to top on route change\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => window.scrollTo(0, 0));\n    // Subscribe to service worker updates\n    if (this.swUpdate.isEnabled) {\n      this.swUpdate.versionUpdates.subscribe(() => {\n        this.updateAvailable = true;\n      });\n    }\n  }\n  updateApp() {\n    if (this.updateAvailable) {\n      window.location.reload();\n    }\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}