{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nlet JwtInterceptor = /*#__PURE__*/(() => {\n  class JwtInterceptor {\n    constructor(authService) {\n      this.authService = authService;\n    }\n    intercept(request, next) {\n      // Don't add authorization header to external APIs like Fake Store API\n      if (request.url.includes('fakestoreapi.com')) {\n        console.log('JWT Interceptor: Skipping auth header for Fake Store API:', request.url);\n        return next.handle(request);\n      }\n      console.log('JWT Interceptor: Processing request:', request.url);\n      // Get the token\n      const token = this.authService.getToken();\n      if (token) {\n        console.log('JWT Interceptor: Adding auth header');\n        // Clone the request and add the authorization header\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      } else {\n        console.log('JWT Interceptor: No token found');\n      }\n      return next.handle(request);\n    }\n    static {\n      this.ɵfac = function JwtInterceptor_Factory(t) {\n        return new (t || JwtInterceptor)(i0.ɵɵinject(i1.AuthService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: JwtInterceptor,\n        factory: JwtInterceptor.ɵfac\n      });\n    }\n  }\n  return JwtInterceptor;\n})();\nexport { JwtInterceptor };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}