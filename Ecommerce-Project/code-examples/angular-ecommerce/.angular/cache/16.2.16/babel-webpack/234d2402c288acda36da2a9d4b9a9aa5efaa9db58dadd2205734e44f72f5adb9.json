{"ast":null,"code":"import { createFeatureSelector, createSelector } from '@ngrx/store';\nexport const selectProductState = createFeatureSelector('products');\nexport const selectAllProducts = createSelector(selectProductState, state => state.items);\nexport const selectProductLoading = createSelector(selectProductState, state => state.loading);\nexport const selectProductError = createSelector(selectProductState, state => state.error);\nexport const selectFeaturedProducts = createSelector(selectAllProducts, products => products.filter(product => product.featured));\nexport const selectProductById = productId => createSelector(selectAllProducts, products => products.find(product => product.id === productId));\n// Category Selectors (assuming categories are part of product state or their own feature state)\nexport const selectAllCategories = createSelector(selectProductState,\n// Or a dedicated category state selector\nstate => state.categories || [] // Assuming categories are loaded here\n);\n\nexport const selectFeaturedCategories = createSelector(selectAllCategories, categories => categories.filter(category => category.featured));","map":{"version":3,"names":["createFeatureSelector","createSelector","selectProductState","selectAllProducts","state","items","selectProductLoading","loading","selectProductError","error","selectFeaturedProducts","products","filter","product","featured","selectProductById","productId","find","id","selectAllCategories","categories","selectFeaturedCategories","category"],"sources":["/Users/stephanelkhoury/Documents/GitHub/Angular-masterclass/Ecommerce-Project/code-examples/angular-ecommerce/src/app/store/selectors/product.selectors.ts"],"sourcesContent":["import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { ProductState } from '../reducers/product.reducer';\nimport { Category, Product } from '../../core/models/product.model'; // Import Product\n\nexport const selectProductState = createFeatureSelector<ProductState>('products');\n\nexport const selectAllProducts = createSelector(\n  selectProductState,\n  (state: ProductState) => state.items\n);\n\nexport const selectProductLoading = createSelector(\n  selectProductState,\n  (state: ProductState) => state.loading\n);\n\nexport const selectProductError = createSelector(\n  selectProductState,\n  (state: ProductState) => state.error\n);\n\nexport const selectFeaturedProducts = createSelector(\n  selectAllProducts,\n  (products: Product[]) => products.filter((product: Product) => product.featured)\n);\n\nexport const selectProductById = (productId: string) => createSelector(\n  selectAllProducts,\n  (products: Product[]) => products.find((product: Product) => product.id === productId)\n);\n\n// Category Selectors (assuming categories are part of product state or their own feature state)\nexport const selectAllCategories = createSelector(\n    selectProductState, // Or a dedicated category state selector\n    (state: ProductState) => state.categories || [] // Assuming categories are loaded here\n);\n\nexport const selectFeaturedCategories = createSelector(\n    selectAllCategories,\n    (categories: Category[]) => categories.filter(category => category.featured)\n);\n"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,cAAc,QAAQ,aAAa;AAInE,OAAO,MAAMC,kBAAkB,GAAGF,qBAAqB,CAAe,UAAU,CAAC;AAEjF,OAAO,MAAMG,iBAAiB,GAAGF,cAAc,CAC7CC,kBAAkB,EACjBE,KAAmB,IAAKA,KAAK,CAACC,KAAK,CACrC;AAED,OAAO,MAAMC,oBAAoB,GAAGL,cAAc,CAChDC,kBAAkB,EACjBE,KAAmB,IAAKA,KAAK,CAACG,OAAO,CACvC;AAED,OAAO,MAAMC,kBAAkB,GAAGP,cAAc,CAC9CC,kBAAkB,EACjBE,KAAmB,IAAKA,KAAK,CAACK,KAAK,CACrC;AAED,OAAO,MAAMC,sBAAsB,GAAGT,cAAc,CAClDE,iBAAiB,EAChBQ,QAAmB,IAAKA,QAAQ,CAACC,MAAM,CAAEC,OAAgB,IAAKA,OAAO,CAACC,QAAQ,CAAC,CACjF;AAED,OAAO,MAAMC,iBAAiB,GAAIC,SAAiB,IAAKf,cAAc,CACpEE,iBAAiB,EAChBQ,QAAmB,IAAKA,QAAQ,CAACM,IAAI,CAAEJ,OAAgB,IAAKA,OAAO,CAACK,EAAE,KAAKF,SAAS,CAAC,CACvF;AAED;AACA,OAAO,MAAMG,mBAAmB,GAAGlB,cAAc,CAC7CC,kBAAkB;AAAE;AACnBE,KAAmB,IAAKA,KAAK,CAACgB,UAAU,IAAI,EAAE,CAAC;CACnD;;AAED,OAAO,MAAMC,wBAAwB,GAAGpB,cAAc,CAClDkB,mBAAmB,EAClBC,UAAsB,IAAKA,UAAU,CAACR,MAAM,CAACU,QAAQ,IAAIA,QAAQ,CAACR,QAAQ,CAAC,CAC/E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}