{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet NotificationService = class NotificationService {\n  constructor(snackBar) {\n    this.snackBar = snackBar;\n  }\n  success(message, duration = 3000) {\n    this.snackBar.open(message, 'Close', {\n      duration: duration,\n      panelClass: ['notification-success'],\n      verticalPosition: 'top',\n      horizontalPosition: 'right'\n    });\n  }\n  error(message, duration = 5000) {\n    this.snackBar.open(message, 'Close', {\n      duration: duration,\n      panelClass: ['notification-error'],\n      verticalPosition: 'top',\n      horizontalPosition: 'right'\n    });\n  }\n  info(message, duration = 4000) {\n    this.snackBar.open(message, 'Close', {\n      duration: duration,\n      panelClass: ['notification-info'],\n      verticalPosition: 'top',\n      horizontalPosition: 'right'\n    });\n  }\n  warn(message, duration = 4000) {\n    this.snackBar.open(message, 'Close', {\n      duration: duration,\n      panelClass: ['notification-warn'],\n      verticalPosition: 'top',\n      horizontalPosition: 'right'\n    });\n  }\n};\nNotificationService = __decorate([Injectable({\n  providedIn: 'root'\n})], NotificationService);\nexport { NotificationService };","map":{"version":3,"names":["Injectable","NotificationService","constructor","snackBar","success","message","duration","open","panelClass","verticalPosition","horizontalPosition","error","info","warn","__decorate","providedIn"],"sources":["/Users/stephanelkhoury/Documents/GitHub/Angular-masterclass/25-Ecommerce-Project/code-examples/angular-ecommerce/src/app/core/services/notification.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  \n  constructor(private snackBar: MatSnackBar) {}\n\n  success(message: string, duration: number = 3000): void {\n    this.snackBar.open(message, 'Close', {\n      duration: duration,\n      panelClass: ['notification-success'],\n      verticalPosition: 'top',\n      horizontalPosition: 'right'\n    });\n  }\n\n  error(message: string, duration: number = 5000): void {\n    this.snackBar.open(message, 'Close', {\n      duration: duration,\n      panelClass: ['notification-error'],\n      verticalPosition: 'top',\n      horizontalPosition: 'right'\n    });\n  }\n\n  info(message: string, duration: number = 4000): void {\n    this.snackBar.open(message, 'Close', {\n      duration: duration,\n      panelClass: ['notification-info'],\n      verticalPosition: 'top',\n      horizontalPosition: 'right'\n    });\n  }\n\n  warn(message: string, duration: number = 4000): void {\n    this.snackBar.open(message, 'Close', {\n      duration: duration,\n      panelClass: ['notification-warn'],\n      verticalPosition: 'top',\n      horizontalPosition: 'right'\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAM1C,IAAaC,mBAAmB,GAAhC,MAAaA,mBAAmB;EAE9BC,YAAoBC,QAAqB;IAArB,KAAAA,QAAQ,GAARA,QAAQ;EAAgB;EAE5CC,OAAOA,CAACC,OAAe,EAAEC,QAAA,GAAmB,IAAI;IAC9C,IAAI,CAACH,QAAQ,CAACI,IAAI,CAACF,OAAO,EAAE,OAAO,EAAE;MACnCC,QAAQ,EAAEA,QAAQ;MAClBE,UAAU,EAAE,CAAC,sBAAsB,CAAC;MACpCC,gBAAgB,EAAE,KAAK;MACvBC,kBAAkB,EAAE;KACrB,CAAC;EACJ;EAEAC,KAAKA,CAACN,OAAe,EAAEC,QAAA,GAAmB,IAAI;IAC5C,IAAI,CAACH,QAAQ,CAACI,IAAI,CAACF,OAAO,EAAE,OAAO,EAAE;MACnCC,QAAQ,EAAEA,QAAQ;MAClBE,UAAU,EAAE,CAAC,oBAAoB,CAAC;MAClCC,gBAAgB,EAAE,KAAK;MACvBC,kBAAkB,EAAE;KACrB,CAAC;EACJ;EAEAE,IAAIA,CAACP,OAAe,EAAEC,QAAA,GAAmB,IAAI;IAC3C,IAAI,CAACH,QAAQ,CAACI,IAAI,CAACF,OAAO,EAAE,OAAO,EAAE;MACnCC,QAAQ,EAAEA,QAAQ;MAClBE,UAAU,EAAE,CAAC,mBAAmB,CAAC;MACjCC,gBAAgB,EAAE,KAAK;MACvBC,kBAAkB,EAAE;KACrB,CAAC;EACJ;EAEAG,IAAIA,CAACR,OAAe,EAAEC,QAAA,GAAmB,IAAI;IAC3C,IAAI,CAACH,QAAQ,CAACI,IAAI,CAACF,OAAO,EAAE,OAAO,EAAE;MACnCC,QAAQ,EAAEA,QAAQ;MAClBE,UAAU,EAAE,CAAC,mBAAmB,CAAC;MACjCC,gBAAgB,EAAE,KAAK;MACvBC,kBAAkB,EAAE;KACrB,CAAC;EACJ;CACD;AAvCYT,mBAAmB,GAAAa,UAAA,EAH/Bd,UAAU,CAAC;EACVe,UAAU,EAAE;CACb,CAAC,C,EACWd,mBAAmB,CAuC/B;SAvCYA,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}