{"ast":null,"code":"import * as i0 from \"@angular/core\";\nlet StorageService = /*#__PURE__*/(() => {\n  class StorageService {\n    constructor() {\n      this.prefix = 'angular-ecommerce_';\n    }\n    setItem(key, value) {\n      const storageKey = this.prefix + key;\n      localStorage.setItem(storageKey, JSON.stringify(value));\n    }\n    getItem(key) {\n      const storageKey = this.prefix + key;\n      const item = localStorage.getItem(storageKey);\n      if (!item) {\n        return null;\n      }\n      try {\n        return JSON.parse(item);\n      } catch (error) {\n        console.error(`Error parsing stored item with key ${key}:`, error);\n        return null;\n      }\n    }\n    removeItem(key) {\n      const storageKey = this.prefix + key;\n      localStorage.removeItem(storageKey);\n    }\n    clear() {\n      // Only clear items with our prefix\n      Object.keys(localStorage).filter(key => key.startsWith(this.prefix)).forEach(key => localStorage.removeItem(key));\n    }\n    static {\n      this.ɵfac = function StorageService_Factory(t) {\n        return new (t || StorageService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: StorageService,\n        factory: StorageService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return StorageService;\n})();\nexport { StorageService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}