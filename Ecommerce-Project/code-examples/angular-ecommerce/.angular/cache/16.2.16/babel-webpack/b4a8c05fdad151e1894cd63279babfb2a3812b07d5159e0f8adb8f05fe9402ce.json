{"ast":null,"code":"import { isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n// NgRx\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\n// Core Module\nimport { CoreModule } from './core/core.module';\n// Shared Module\nimport { SharedModule } from './shared/shared.module';\n// App Components\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n// Root Reducers and Effects\nimport { reducers, metaReducers } from './store';\nimport { AppEffects } from './store/effects/app.effects';\nimport { AuthEffects } from './store/effects/auth.effects';\nimport { CartEffects } from './store/effects/cart.effects';\n// Interceptors\nimport { JwtInterceptor } from './core/interceptors/jwt.interceptor';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { CacheInterceptor } from './core/interceptors/cache.interceptor';\n// For loading spinner and icons (if not already imported globally or in a shared module)\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@ngrx/effects\";\nimport * as i3 from \"@ngrx/store-devtools\";\nimport * as i4 from \"@ngrx/router-store\";\nimport * as i5 from \"@angular/service-worker\";\nlet AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static {\n      this.ɵfac = function AppModule_Factory(t) {\n        return new (t || AppModule)();\n      };\n    }\n    static {\n      this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n        type: AppModule,\n        bootstrap: [AppComponent]\n      });\n    }\n    static {\n      this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n        providers: [{\n          provide: HTTP_INTERCEPTORS,\n          useClass: JwtInterceptor,\n          multi: true\n        }, {\n          provide: HTTP_INTERCEPTORS,\n          useClass: ErrorInterceptor,\n          multi: true\n        }, {\n          provide: HTTP_INTERCEPTORS,\n          useClass: CacheInterceptor,\n          multi: true\n        }],\n        imports: [BrowserModule, BrowserAnimationsModule, HttpClientModule, RouterModule, AppRoutingModule,\n        // Core and Shared Modules\n        CoreModule, SharedModule,\n        // NgRx\n        StoreModule.forRoot(reducers, {\n          metaReducers\n        }), EffectsModule.forRoot([AppEffects, AuthEffects, CartEffects]), StoreDevtoolsModule.instrument({\n          maxAge: 25,\n          logOnly: !isDevMode(),\n          autoPause: true // Pause recording actions and state changes when the extension window is not open\n        }), StoreRouterConnectingModule.forRoot(),\n        // PWA\n        ServiceWorkerModule.register('ngsw-worker.js', {\n          enabled: !isDevMode(),\n          // Register the ServiceWorker as soon as the application is stable\n          // or after 30 seconds (whichever comes first).\n          registrationStrategy: 'registerWhenStable:30000'\n        }), MatProgressSpinnerModule, MatIconModule // Add if not already available\n        ]\n      });\n    }\n  }\n  return AppModule;\n})();\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}