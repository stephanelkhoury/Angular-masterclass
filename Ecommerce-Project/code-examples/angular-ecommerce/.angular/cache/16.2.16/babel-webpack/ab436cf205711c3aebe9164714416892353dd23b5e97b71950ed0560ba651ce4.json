{"ast":null,"code":"import { map, take } from 'rxjs/operators';\nimport { selectIsAuthenticated } from '../../store/selectors/auth.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/notification.service\";\nlet AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(store, router, notificationService) {\n      this.store = store;\n      this.router = router;\n      this.notificationService = notificationService;\n    }\n    canActivate(route, state) {\n      return this.store.select(selectIsAuthenticated).pipe(take(1), map(isAuthenticated => {\n        if (isAuthenticated) {\n          return true;\n        }\n        this.notificationService.info('Please login to access this page');\n        return this.router.createUrlTree(['/auth/login'], {\n          queryParams: {\n            returnUrl: state.url\n          }\n        });\n      }));\n    }\n    static {\n      this.ɵfac = function AuthGuard_Factory(t) {\n        return new (t || AuthGuard)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.NotificationService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthGuard,\n        factory: AuthGuard.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthGuard;\n})();\nexport { AuthGuard };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}