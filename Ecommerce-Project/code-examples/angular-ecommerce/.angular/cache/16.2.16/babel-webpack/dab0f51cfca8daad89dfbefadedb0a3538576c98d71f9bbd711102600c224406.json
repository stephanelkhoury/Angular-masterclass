{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/progress-spinner\";\nclass LoadingSpinnerComponent {\n  constructor() {\n    this.diameter = 50;\n    this.color = 'primary';\n    this.mode = 'indeterminate';\n    this.value = 100;\n    this.overlay = false;\n  }\n  static {\n    this.ɵfac = function LoadingSpinnerComponent_Factory(t) {\n      return new (t || LoadingSpinnerComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoadingSpinnerComponent,\n      selectors: [[\"app-loading-spinner\"]],\n      inputs: {\n        diameter: \"diameter\",\n        color: \"color\",\n        mode: \"mode\",\n        value: \"value\",\n        overlay: \"overlay\"\n      },\n      decls: 2,\n      vars: 6,\n      consts: [[1, \"spinner-container\"], [3, \"diameter\", \"color\", \"mode\", \"value\"]],\n      template: function LoadingSpinnerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"mat-progress-spinner\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"spinner-overlay\", ctx.overlay);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"diameter\", ctx.diameter)(\"color\", ctx.color)(\"mode\", ctx.mode)(\"value\", ctx.value);\n        }\n      },\n      dependencies: [i1.MatProgressSpinner],\n      styles: [\".spinner-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 20px;\\n}\\n.spinner-container.spinner-overlay[_ngcontent-%COMP%] {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: rgba(255, 255, 255, 0.7);\\n  z-index: 9999;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbG9hZGluZy1zcGlubmVyL2xvYWRpbmctc3Bpbm5lci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBQUNGO0FBQ0U7RUFDRSxlQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLDBDQUFBO0VBQ0EsYUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLnNwaW5uZXItY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIFxuICAmLnNwaW5uZXItb3ZlcmxheSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7XG4gICAgei1pbmRleDogOTk5OTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport { LoadingSpinnerComponent };","map":{"version":3,"names":["LoadingSpinnerComponent","constructor","diameter","color","mode","value","overlay","selectors","inputs","decls","vars","consts","template","LoadingSpinnerComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassProp","ɵɵadvance","ɵɵproperty"],"sources":["/Users/stephanelkhoury/Documents/GitHub/Angular-masterclass/25-Ecommerce-Project/code-examples/angular-ecommerce/src/app/shared/components/loading-spinner/loading-spinner.component.ts","/Users/stephanelkhoury/Documents/GitHub/Angular-masterclass/25-Ecommerce-Project/code-examples/angular-ecommerce/src/app/shared/components/loading-spinner/loading-spinner.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-spinner',\n  templateUrl: './loading-spinner.component.html',\n  styleUrls: ['./loading-spinner.component.scss']\n})\nexport class LoadingSpinnerComponent {\n  @Input() diameter = 50;\n  @Input() color: 'primary' | 'accent' | 'warn' = 'primary';\n  @Input() mode: 'indeterminate' | 'determinate' = 'indeterminate';\n  @Input() value = 100;\n  @Input() overlay = false;\n}\n","<div [class.spinner-overlay]=\"overlay\" class=\"spinner-container\">\n  <mat-progress-spinner\n    [diameter]=\"diameter\"\n    [color]=\"color\"\n    [mode]=\"mode\"\n    [value]=\"value\">\n  </mat-progress-spinner>\n</div>\n"],"mappings":";;AAEA,MAKaA,uBAAuB;EALpCC,YAAA;IAMW,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,KAAK,GAAkC,SAAS;IAChD,KAAAC,IAAI,GAAoC,eAAe;IACvD,KAAAC,KAAK,GAAG,GAAG;IACX,KAAAC,OAAO,GAAG,KAAK;;;;uBALbN,uBAAuB;IAAA;EAAA;;;YAAvBA,uBAAuB;MAAAO,SAAA;MAAAC,MAAA;QAAAN,QAAA;QAAAC,KAAA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,OAAA;MAAA;MAAAG,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCPpCE,EAAA,CAAAC,cAAA,aAAiE;UAC/DD,EAAA,CAAAE,SAAA,8BAKuB;UACzBF,EAAA,CAAAG,YAAA,EAAM;;;UAPDH,EAAA,CAAAI,WAAA,oBAAAL,GAAA,CAAAT,OAAA,CAAiC;UAElCU,EAAA,CAAAK,SAAA,GAAqB;UAArBL,EAAA,CAAAM,UAAA,aAAAP,GAAA,CAAAb,QAAA,CAAqB,UAAAa,GAAA,CAAAZ,KAAA,UAAAY,GAAA,CAAAX,IAAA,WAAAW,GAAA,CAAAV,KAAA;;;;;;;;SDKZL,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}