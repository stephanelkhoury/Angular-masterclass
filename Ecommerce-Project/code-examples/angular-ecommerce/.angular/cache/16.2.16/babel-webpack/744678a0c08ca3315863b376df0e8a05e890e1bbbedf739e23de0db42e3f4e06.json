{"ast":null,"code":"import { createAction, props } from '@ngrx/store';\nexport const addToCart = createAction('[Cart Page] Add to Cart', props());\nexport const removeFromCart = createAction('[Cart Page] Remove from Cart', props() // Changed from itemId to productId for consistency\n);\n\nexport const updateCartItemQuantity = createAction('[Cart Page] Update Cart Item Quantity', props() // Changed from itemId to productId\n);\n\nexport const clearCart = createAction('[Cart Page] Clear Cart');\nexport const loadCart = createAction('[Cart API] Load Cart');\nexport const loadCartSuccess = createAction('[Cart API] Load Cart Success', props());\nexport const loadCartFailure = createAction('[Cart API] Load Cart Failure', props());\nexport const navigateToCheckout = createAction('[Cart Page] Navigate To Checkout');\n// Actions for syncing cart with server (if applicable)\nexport const syncCartWithServer = createAction('[Cart] Sync Cart With Server');\nexport const syncCartWithServerSuccess = createAction('[Cart API] Sync Cart With Server Success');\nexport const syncCartWithServerFailure = createAction('[Cart API] Sync Cart With Server Failure', props());","map":{"version":3,"names":["createAction","props","addToCart","removeFromCart","updateCartItemQuantity","clearCart","loadCart","loadCartSuccess","loadCartFailure","navigateToCheckout","syncCartWithServer","syncCartWithServerSuccess","syncCartWithServerFailure"],"sources":["/Users/stephanelkhoury/Documents/GitHub/Angular-masterclass/Ecommerce-Project/code-examples/angular-ecommerce/src/app/store/actions/cart.actions.ts"],"sourcesContent":["import { createAction, props } from '@ngrx/store';\nimport { Product } from '../../core/models/product.model';\nimport { CartItem } from '../../core/models/cart-item.model';\n\nexport const addToCart = createAction(\n  '[Cart Page] Add to Cart',\n  props<{ item: CartItem }>()\n);\n\nexport const removeFromCart = createAction(\n  '[Cart Page] Remove from Cart',\n  props<{ productId: string }>() // Changed from itemId to productId for consistency\n);\n\nexport const updateCartItemQuantity = createAction(\n  '[Cart Page] Update Cart Item Quantity',\n  props<{ productId: string; quantity: number }>() // Changed from itemId to productId\n);\n\nexport const clearCart = createAction(\n  '[Cart Page] Clear Cart'\n);\n\nexport const loadCart = createAction('[Cart API] Load Cart');\nexport const loadCartSuccess = createAction('[Cart API] Load Cart Success', props<{ items: CartItem[] }>());\nexport const loadCartFailure = createAction('[Cart API] Load Cart Failure', props<{ error: any }>());\n\nexport const navigateToCheckout = createAction('[Cart Page] Navigate To Checkout');\n\n// Actions for syncing cart with server (if applicable)\nexport const syncCartWithServer = createAction('[Cart] Sync Cart With Server');\nexport const syncCartWithServerSuccess = createAction('[Cart API] Sync Cart With Server Success');\nexport const syncCartWithServerFailure = createAction('[Cart API] Sync Cart With Server Failure', props<{ error: any }>());\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,KAAK,QAAQ,aAAa;AAIjD,OAAO,MAAMC,SAAS,GAAGF,YAAY,CACnC,yBAAyB,EACzBC,KAAK,EAAsB,CAC5B;AAED,OAAO,MAAME,cAAc,GAAGH,YAAY,CACxC,8BAA8B,EAC9BC,KAAK,EAAyB,CAAC;CAChC;;AAED,OAAO,MAAMG,sBAAsB,GAAGJ,YAAY,CAChD,uCAAuC,EACvCC,KAAK,EAA2C,CAAC;CAClD;;AAED,OAAO,MAAMI,SAAS,GAAGL,YAAY,CACnC,wBAAwB,CACzB;AAED,OAAO,MAAMM,QAAQ,GAAGN,YAAY,CAAC,sBAAsB,CAAC;AAC5D,OAAO,MAAMO,eAAe,GAAGP,YAAY,CAAC,8BAA8B,EAAEC,KAAK,EAAyB,CAAC;AAC3G,OAAO,MAAMO,eAAe,GAAGR,YAAY,CAAC,8BAA8B,EAAEC,KAAK,EAAkB,CAAC;AAEpG,OAAO,MAAMQ,kBAAkB,GAAGT,YAAY,CAAC,kCAAkC,CAAC;AAElF;AACA,OAAO,MAAMU,kBAAkB,GAAGV,YAAY,CAAC,8BAA8B,CAAC;AAC9E,OAAO,MAAMW,yBAAyB,GAAGX,YAAY,CAAC,0CAA0C,CAAC;AACjG,OAAO,MAAMY,yBAAyB,GAAGZ,YAAY,CAAC,0CAA0C,EAAEC,KAAK,EAAkB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}