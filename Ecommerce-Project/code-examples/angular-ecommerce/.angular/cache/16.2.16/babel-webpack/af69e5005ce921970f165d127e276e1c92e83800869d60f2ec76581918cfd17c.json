{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as ProductActions from '../actions/product.actions';\nexport const initialState = {\n  items: [],\n  categories: [],\n  reviews: [],\n  selectedProduct: null,\n  currentProduct: null,\n  total: 0,\n  loading: false,\n  error: null\n};\nexport const reducer = createReducer(initialState,\n// Load Products\non(ProductActions.loadProducts, state => ({\n  ...state,\n  loading: true,\n  error: null\n})), on(ProductActions.loadProductsSuccess, (state, {\n  paginatedResponse\n}) => ({\n  ...state,\n  items: paginatedResponse.items,\n  total: paginatedResponse.totalCount,\n  loading: false,\n  error: null\n})), on(ProductActions.loadProductsFailure, (state, {\n  error\n}) => ({\n  ...state,\n  loading: false,\n  error: error\n})),\n// Load Product By ID\non(ProductActions.loadProductById, state => ({\n  ...state,\n  loading: true,\n  error: null\n})), on(ProductActions.loadProductByIdSuccess, (state, {\n  product\n}) => ({\n  ...state,\n  currentProduct: product,\n  selectedProduct: product,\n  loading: false,\n  error: null\n})), on(ProductActions.loadProductByIdFailure, (state, {\n  error\n}) => ({\n  ...state,\n  loading: false,\n  error: error\n})),\n// Load Categories\non(ProductActions.loadCategories, state => {\n  console.log('Products Reducer: loadCategories action received');\n  return {\n    ...state,\n    loading: true,\n    error: null\n  };\n}), on(ProductActions.loadCategoriesSuccess, (state, {\n  categories\n}) => {\n  console.log('Products Reducer: loadCategoriesSuccess action received', categories);\n  return {\n    ...state,\n    categories: categories,\n    loading: false,\n    error: null\n  };\n}), on(ProductActions.loadCategoriesFailure, (state, {\n  error\n}) => {\n  console.log('Products Reducer: loadCategoriesFailure action received', error);\n  return {\n    ...state,\n    loading: false,\n    error: error\n  };\n}));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}