{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\nlet HeaderComponent = class HeaderComponent {\n  constructor(store, authService, cartService, router) {\n    this.store = store;\n    this.authService = authService;\n    this.cartService = cartService;\n    this.router = router;\n    // Search functionality\n    this.searchControl = new FormControl('');\n    this.mobileSearchControl = new FormControl('');\n    this.searchSuggestions = [];\n    this.showSearchSuggestions = false;\n    this.mobileSearchOpen = false;\n    this.showMobileSearch = false;\n    // Mobile menu state\n    this.mobileMenuOpen = false;\n    this.showMobileMenu = false;\n    this.megaMenuOpen = false;\n    this.showMobileCategories = false;\n    // Scroll state\n    this.isScrolled = false;\n    // Categories for mega menu\n    this.categories = [{\n      name: 'Electronics',\n      icon: 'devices',\n      subcategories: ['Smartphones', 'Laptops', 'Tablets', 'Accessories']\n    }, {\n      name: 'Fashion',\n      icon: 'checkroom',\n      subcategories: ['Men\\'s Clothing', 'Women\\'s Clothing', 'Shoes', 'Bags']\n    }, {\n      name: 'Home & Garden',\n      icon: 'home',\n      subcategories: ['Furniture', 'Decor', 'Kitchen', 'Garden']\n    }, {\n      name: 'Sports',\n      icon: 'sports_soccer',\n      subcategories: ['Fitness', 'Outdoor', 'Team Sports', 'Equipment']\n    }];\n    // Popular categories observable\n    this.popularCategories$ = new BehaviorSubject(this.categories).asObservable();\n    // User notifications (mock data)\n    this.notificationsSubject = new BehaviorSubject([{\n      id: 1,\n      message: 'Your order has been shipped!',\n      type: 'success',\n      timestamp: new Date(),\n      createdAt: new Date(),\n      read: false\n    }, {\n      id: 2,\n      message: 'New products available in Electronics',\n      type: 'info',\n      timestamp: new Date(),\n      createdAt: new Date(),\n      read: false\n    }]);\n    // Mobile detection\n    this.isMobile = false;\n    this.isLoggedIn$ = this.store.select(state => !!state.auth.user);\n    this.currentUser$ = this.store.select(state => state.auth.user);\n    this.cartItems$ = this.store.select(state => state.cart.items);\n    this.cartItemCount$ = this.store.select(state => state.cart.items.reduce((count, item) => count + item.quantity, 0));\n    this.isAdmin$ = this.store.select(state => state.auth.user?.role === 'admin');\n    // Alias for template compatibility\n    this.isAuthenticated$ = this.isLoggedIn$;\n    // Mock observables for wishlist and notifications\n    this.wishlistCount$ = new BehaviorSubject(3).asObservable();\n    this.notifications$ = this.notificationsSubject.asObservable();\n    this.notificationCount$ = this.notificationsSubject.pipe(map(notifications => notifications.filter(n => !n.read).length));\n    this.detectMobile();\n  }\n  ngOnInit() {\n    // Load cart items when component initializes\n    this.cartService.loadCart();\n    // Setup search functionality\n    this.searchControl.valueChanges.pipe(debounceTime(300), distinctUntilChanged(), filter(term => term !== null && term.length >= 2)).subscribe(term => {\n      this.onSearch(term);\n    });\n  }\n  onWindowScroll() {\n    this.isScrolled = window.pageYOffset > 50;\n  }\n  onResize(event) {\n    this.detectMobile();\n  }\n  onDocumentClick(event) {\n    // Close search suggestions when clicking outside\n    if (!event.target.closest('.search-container')) {\n      this.showSearchSuggestions = false;\n    }\n    // Close mega menu when clicking outside\n    if (!event.target.closest('.mega-menu-trigger') && !event.target.closest('.mega-menu')) {\n      this.megaMenuOpen = false;\n    }\n  }\n  // Search functionality - handles both with and without parameters\n  onSearch(term) {\n    const searchTerm = term !== undefined ? term || '' : this.searchControl.value || '';\n    if (!searchTerm || searchTerm.length < 2) {\n      this.searchSuggestions = [];\n      this.showSearchSuggestions = false;\n      if (term === undefined) {\n        // If called without parameter (button click), perform search anyway\n        this.performSearch(searchTerm);\n      }\n      return;\n    }\n    // Mock search suggestions\n    const mockSuggestions = ['iPhone 15 Pro', 'Samsung Galaxy S24', 'MacBook Pro', 'AirPods Pro', 'iPad Air', 'Google Pixel 8', 'Sony WH-1000XM5', 'Nintendo Switch'];\n    this.searchSuggestions = mockSuggestions.filter(suggestion => suggestion.toLowerCase().includes(searchTerm.toLowerCase())).slice(0, 5);\n    this.showSearchSuggestions = this.searchSuggestions.length > 0;\n    // If called without parameter (from button click), perform search\n    if (term === undefined) {\n      this.performSearch(searchTerm);\n    }\n  }\n  clearSearch() {\n    this.searchControl.setValue('');\n    this.searchSuggestions = [];\n    this.showSearchSuggestions = false;\n  }\n  selectSuggestion(suggestion) {\n    this.searchControl.setValue(suggestion);\n    this.showSearchSuggestions = false;\n    this.performSearch(suggestion);\n  }\n  performSearch(term) {\n    if (term) {\n      this.router.navigate(['/products'], {\n        queryParams: {\n          search: term\n        }\n      });\n      this.showSearchSuggestions = false;\n      if (this.mobileSearchOpen) {\n        this.toggleMobileSearch();\n      }\n    }\n  }\n  // Mobile search toggle\n  toggleMobileSearch() {\n    this.mobileSearchOpen = !this.mobileSearchOpen;\n    this.showMobileSearch = this.mobileSearchOpen;\n    if (this.mobileSearchOpen) {\n      // Focus search input after animation\n      setTimeout(() => {\n        const searchInput = document.querySelector('.mobile-search input');\n        if (searchInput) {\n          searchInput.focus();\n        }\n      }, 300);\n    }\n  }\n  onMobileSearch() {\n    const searchTerm = this.mobileSearchControl.value || '';\n    this.performSearch(searchTerm);\n    this.mobileSearchControl.setValue('');\n    this.toggleMobileSearch();\n  }\n  // Mobile menu\n  toggleMobileMenu() {\n    this.mobileMenuOpen = !this.mobileMenuOpen;\n    this.showMobileMenu = this.mobileMenuOpen;\n    // Prevent body scroll when menu is open\n    document.body.style.overflow = this.mobileMenuOpen ? 'hidden' : '';\n  }\n  closeMobileMenu() {\n    this.mobileMenuOpen = false;\n    this.showMobileMenu = false;\n    document.body.style.overflow = '';\n  }\n  // Mobile categories toggle\n  toggleMobileCategories() {\n    this.showMobileCategories = !this.showMobileCategories;\n  }\n  // Mega menu\n  toggleMegaMenu() {\n    this.megaMenuOpen = !this.megaMenuOpen;\n  }\n  // Navigation methods\n  navigateToCategory(category) {\n    this.router.navigate(['/products'], {\n      queryParams: {\n        category: category.toLowerCase()\n      }\n    });\n    this.closeMobileMenu();\n    this.megaMenuOpen = false;\n  }\n  navigateToSubcategory(subcategory) {\n    this.router.navigate(['/products'], {\n      queryParams: {\n        subcategory: subcategory.toLowerCase()\n      }\n    });\n    this.closeMobileMenu();\n    this.megaMenuOpen = false;\n  }\n  navigateToWishlist() {\n    this.router.navigate(['/wishlist']);\n    this.closeMobileMenu();\n  }\n  navigateToCart() {\n    this.router.navigate(['/cart']);\n    this.closeMobileMenu();\n  }\n  navigateToProfile() {\n    this.router.navigate(['/profile']);\n    this.closeMobileMenu();\n  }\n  navigateToOrders() {\n    this.router.navigate(['/profile/orders']);\n    this.closeMobileMenu();\n  }\n  navigateToAdmin() {\n    this.router.navigate(['/admin']);\n    this.closeMobileMenu();\n  }\n  // Notification methods\n  markAllAsRead() {\n    const notifications = this.notificationsSubject.value;\n    const updatedNotifications = notifications.map(n => ({\n      ...n,\n      read: true\n    }));\n    this.notificationsSubject.next(updatedNotifications);\n  }\n  markAsRead(notification) {\n    const notifications = this.notificationsSubject.value;\n    const updatedNotifications = notifications.map(n => n.id === notification.id ? {\n      ...n,\n      read: true\n    } : n);\n    this.notificationsSubject.next(updatedNotifications);\n  }\n  getNotificationIcon(type) {\n    switch (type) {\n      case 'success':\n        return 'check_circle';\n      case 'warning':\n        return 'warning';\n      case 'error':\n        return 'error';\n      case 'info':\n      default:\n        return 'info';\n    }\n  }\n  // Utility methods\n  detectMobile() {\n    this.isMobile = window.innerWidth < 768;\n  }\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/']);\n    this.closeMobileMenu();\n  }\n};\n__decorate([HostListener('window:scroll', [])], HeaderComponent.prototype, \"onWindowScroll\", null);\n__decorate([HostListener('window:resize', ['$event'])], HeaderComponent.prototype, \"onResize\", null);\n__decorate([HostListener('document:click', ['$event'])], HeaderComponent.prototype, \"onDocumentClick\", null);\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'] // <-- Make sure this matches your SCSS filename\n})], HeaderComponent);\nexport { HeaderComponent };","map":{"version":3,"names":["Component","HostListener","FormControl","BehaviorSubject","debounceTime","distinctUntilChanged","filter","map","HeaderComponent","constructor","store","authService","cartService","router","searchControl","mobileSearchControl","searchSuggestions","showSearchSuggestions","mobileSearchOpen","showMobileSearch","mobileMenuOpen","showMobileMenu","megaMenuOpen","showMobileCategories","isScrolled","categories","name","icon","subcategories","popularCategories$","asObservable","notificationsSubject","id","message","type","timestamp","Date","createdAt","read","isMobile","isLoggedIn$","select","state","auth","user","currentUser$","cartItems$","cart","items","cartItemCount$","reduce","count","item","quantity","isAdmin$","role","isAuthenticated$","wishlistCount$","notifications$","notificationCount$","pipe","notifications","n","length","detectMobile","ngOnInit","loadCart","valueChanges","term","subscribe","onSearch","onWindowScroll","window","pageYOffset","onResize","event","onDocumentClick","target","closest","searchTerm","undefined","value","performSearch","mockSuggestions","suggestion","toLowerCase","includes","slice","clearSearch","setValue","selectSuggestion","navigate","queryParams","search","toggleMobileSearch","setTimeout","searchInput","document","querySelector","focus","onMobileSearch","toggleMobileMenu","body","style","overflow","closeMobileMenu","toggleMobileCategories","toggleMegaMenu","navigateToCategory","category","navigateToSubcategory","subcategory","navigateToWishlist","navigateToCart","navigateToProfile","navigateToOrders","navigateToAdmin","markAllAsRead","updatedNotifications","next","markAsRead","notification","getNotificationIcon","innerWidth","logout","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/stephanelkhoury/Documents/GitHub/Angular-masterclass/Ecommerce-Project/code-examples/angular-ecommerce/src/app/shared/components/header/header.component.ts"],"sourcesContent":["import { Component, OnInit, HostListener } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { AppState } from '../../../store';\nimport { User } from '../../../core/models/user.model';\nimport { CartItem } from '../../../core/models/cart.model';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { CartService } from '../../../core/services/cart.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'] // <-- Make sure this matches your SCSS filename\n})\nexport class HeaderComponent implements OnInit {\n  isLoggedIn$: Observable<boolean>;\n  currentUser$: Observable<User | null>;\n  cartItems$: Observable<CartItem[]>;\n  cartItemCount$: Observable<number>;\n  isAdmin$: Observable<boolean>;\n  wishlistCount$: Observable<number>;\n  notificationCount$: Observable<number>;\n  notifications$: Observable<any[]>;\n  \n  // Alias for template compatibility\n  isAuthenticated$: Observable<boolean>;\n  \n  // Search functionality\n  searchControl = new FormControl('');\n  mobileSearchControl = new FormControl('');\n  searchSuggestions: string[] = [];\n  showSearchSuggestions = false;\n  mobileSearchOpen = false;\n  showMobileSearch = false;\n\n  // Mobile menu state\n  mobileMenuOpen = false;\n  showMobileMenu = false;\n  megaMenuOpen = false;\n  showMobileCategories = false;\n\n  // Scroll state\n  isScrolled = false;\n\n  // Categories for mega menu\n  categories = [\n    {\n      name: 'Electronics',\n      icon: 'devices',\n      subcategories: ['Smartphones', 'Laptops', 'Tablets', 'Accessories']\n    },\n    {\n      name: 'Fashion',\n      icon: 'checkroom',\n      subcategories: ['Men\\'s Clothing', 'Women\\'s Clothing', 'Shoes', 'Bags']\n    },\n    {\n      name: 'Home & Garden',\n      icon: 'home',\n      subcategories: ['Furniture', 'Decor', 'Kitchen', 'Garden']\n    },\n    {\n      name: 'Sports',\n      icon: 'sports_soccer',\n      subcategories: ['Fitness', 'Outdoor', 'Team Sports', 'Equipment']\n    }\n  ];\n\n  // Popular categories observable\n  popularCategories$ = new BehaviorSubject(this.categories).asObservable();\n\n  // User notifications (mock data)\n  private notificationsSubject = new BehaviorSubject<any[]>([\n    {\n      id: 1,\n      message: 'Your order has been shipped!',\n      type: 'success',\n      timestamp: new Date(),\n      createdAt: new Date(),\n      read: false\n    },\n    {\n      id: 2,\n      message: 'New products available in Electronics',\n      type: 'info',\n      timestamp: new Date(),\n      createdAt: new Date(),\n      read: false\n    }\n  ]);\n\n  // Mobile detection\n  isMobile = false;\n\n  constructor(\n    private store: Store<AppState>,\n    private authService: AuthService,\n    private cartService: CartService,\n    private router: Router\n  ) {\n    this.isLoggedIn$ = this.store.select(state => !!state.auth.user);\n    this.currentUser$ = this.store.select(state => state.auth.user);\n    this.cartItems$ = this.store.select(state => state.cart.items);\n    this.cartItemCount$ = this.store.select(state => \n      state.cart.items.reduce((count: number, item: CartItem) => count + item.quantity, 0)\n    );\n    this.isAdmin$ = this.store.select(state => state.auth.user?.role === 'admin');\n    \n    // Alias for template compatibility\n    this.isAuthenticated$ = this.isLoggedIn$;\n    \n    // Mock observables for wishlist and notifications\n    this.wishlistCount$ = new BehaviorSubject(3).asObservable();\n    this.notifications$ = this.notificationsSubject.asObservable();\n    this.notificationCount$ = this.notificationsSubject.pipe(\n      map((notifications: any[]) => notifications.filter(n => !n.read).length)\n    );\n\n    this.detectMobile();\n  }\n\n  ngOnInit(): void {\n    // Load cart items when component initializes\n    this.cartService.loadCart();\n\n    // Setup search functionality\n    this.searchControl.valueChanges.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      filter(term => term !== null && term.length >= 2)\n    ).subscribe(term => {\n      this.onSearch(term);\n    });\n  }\n\n  @HostListener('window:scroll', [])\n  onWindowScroll() {\n    this.isScrolled = window.pageYOffset > 50;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any): void {\n    this.detectMobile();\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: any): void {\n    // Close search suggestions when clicking outside\n    if (!event.target.closest('.search-container')) {\n      this.showSearchSuggestions = false;\n    }\n    // Close mega menu when clicking outside\n    if (!event.target.closest('.mega-menu-trigger') && !event.target.closest('.mega-menu')) {\n      this.megaMenuOpen = false;\n    }\n  }\n\n  // Search functionality - handles both with and without parameters\n  onSearch(term?: string | null): void {\n    const searchTerm = term !== undefined ? (term || '') : (this.searchControl.value || '');\n    \n    if (!searchTerm || searchTerm.length < 2) {\n      this.searchSuggestions = [];\n      this.showSearchSuggestions = false;\n      if (term === undefined) {\n        // If called without parameter (button click), perform search anyway\n        this.performSearch(searchTerm);\n      }\n      return;\n    }\n\n    // Mock search suggestions\n    const mockSuggestions = [\n      'iPhone 15 Pro',\n      'Samsung Galaxy S24',\n      'MacBook Pro',\n      'AirPods Pro',\n      'iPad Air',\n      'Google Pixel 8',\n      'Sony WH-1000XM5',\n      'Nintendo Switch'\n    ];\n\n    this.searchSuggestions = mockSuggestions\n      .filter(suggestion => suggestion.toLowerCase().includes(searchTerm.toLowerCase()))\n      .slice(0, 5);\n    \n    this.showSearchSuggestions = this.searchSuggestions.length > 0;\n    \n    // If called without parameter (from button click), perform search\n    if (term === undefined) {\n      this.performSearch(searchTerm);\n    }\n  }\n\n  clearSearch(): void {\n    this.searchControl.setValue('');\n    this.searchSuggestions = [];\n    this.showSearchSuggestions = false;\n  }\n\n  selectSuggestion(suggestion: string): void {\n    this.searchControl.setValue(suggestion);\n    this.showSearchSuggestions = false;\n    this.performSearch(suggestion);\n  }\n\n  performSearch(term: string): void {\n    if (term) {\n      this.router.navigate(['/products'], { \n        queryParams: { search: term } \n      });\n      this.showSearchSuggestions = false;\n      if (this.mobileSearchOpen) {\n        this.toggleMobileSearch();\n      }\n    }\n  }\n\n  // Mobile search toggle\n  toggleMobileSearch(): void {\n    this.mobileSearchOpen = !this.mobileSearchOpen;\n    this.showMobileSearch = this.mobileSearchOpen;\n    if (this.mobileSearchOpen) {\n      // Focus search input after animation\n      setTimeout(() => {\n        const searchInput = document.querySelector('.mobile-search input') as HTMLInputElement;\n        if (searchInput) {\n          searchInput.focus();\n        }\n      }, 300);\n    }\n  }\n\n  onMobileSearch(): void {\n    const searchTerm = this.mobileSearchControl.value || '';\n    this.performSearch(searchTerm);\n    this.mobileSearchControl.setValue('');\n    this.toggleMobileSearch();\n  }\n\n  // Mobile menu\n  toggleMobileMenu(): void {\n    this.mobileMenuOpen = !this.mobileMenuOpen;\n    this.showMobileMenu = this.mobileMenuOpen;\n    // Prevent body scroll when menu is open\n    document.body.style.overflow = this.mobileMenuOpen ? 'hidden' : '';\n  }\n\n  closeMobileMenu(): void {\n    this.mobileMenuOpen = false;\n    this.showMobileMenu = false;\n    document.body.style.overflow = '';\n  }\n\n  // Mobile categories toggle\n  toggleMobileCategories(): void {\n    this.showMobileCategories = !this.showMobileCategories;\n  }\n\n  // Mega menu\n  toggleMegaMenu(): void {\n    this.megaMenuOpen = !this.megaMenuOpen;\n  }\n\n  // Navigation methods\n  navigateToCategory(category: string): void {\n    this.router.navigate(['/products'], { \n      queryParams: { category: category.toLowerCase() } \n    });\n    this.closeMobileMenu();\n    this.megaMenuOpen = false;\n  }\n\n  navigateToSubcategory(subcategory: string): void {\n    this.router.navigate(['/products'], { \n      queryParams: { subcategory: subcategory.toLowerCase() } \n    });\n    this.closeMobileMenu();\n    this.megaMenuOpen = false;\n  }\n\n  navigateToWishlist(): void {\n    this.router.navigate(['/wishlist']);\n    this.closeMobileMenu();\n  }\n\n  navigateToCart(): void {\n    this.router.navigate(['/cart']);\n    this.closeMobileMenu();\n  }\n\n  navigateToProfile(): void {\n    this.router.navigate(['/profile']);\n    this.closeMobileMenu();\n  }\n\n  navigateToOrders(): void {\n    this.router.navigate(['/profile/orders']);\n    this.closeMobileMenu();\n  }\n\n  navigateToAdmin(): void {\n    this.router.navigate(['/admin']);\n    this.closeMobileMenu();\n  }\n\n  // Notification methods\n  markAllAsRead(): void {\n    const notifications = this.notificationsSubject.value;\n    const updatedNotifications = notifications.map(n => ({ ...n, read: true }));\n    this.notificationsSubject.next(updatedNotifications);\n  }\n\n  markAsRead(notification: any): void {\n    const notifications = this.notificationsSubject.value;\n    const updatedNotifications = notifications.map(n => \n      n.id === notification.id ? { ...n, read: true } : n\n    );\n    this.notificationsSubject.next(updatedNotifications);\n  }\n\n  getNotificationIcon(type: string): string {\n    switch (type) {\n      case 'success': return 'check_circle';\n      case 'warning': return 'warning';\n      case 'error': return 'error';\n      case 'info': \n      default: return 'info';\n    }\n  }\n\n  // Utility methods\n  private detectMobile(): void {\n    this.isMobile = window.innerWidth < 768;\n  }\n\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/']);\n    this.closeMobileMenu();\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}