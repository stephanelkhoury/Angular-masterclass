{"ast":null,"code":"import { BehaviorSubject, map, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./storage.service\";\nclass WishlistService {\n  constructor(storageService) {\n    this.storageService = storageService;\n    this.WISHLIST_KEY = 'ecommerce_wishlist';\n    this.wishlistSubject = new BehaviorSubject([]);\n    this.wishlist$ = this.wishlistSubject.asObservable();\n    this.wishlistCount$ = this.wishlist$.pipe(map(items => items.length));\n    this.loadWishlist();\n  }\n  loadWishlist() {\n    const savedWishlist = this.storageService.getItem(this.WISHLIST_KEY);\n    if (savedWishlist && Array.isArray(savedWishlist)) {\n      this.wishlistSubject.next(savedWishlist);\n    }\n  }\n  saveWishlist() {\n    this.storageService.setItem(this.WISHLIST_KEY, this.wishlistSubject.value);\n  }\n  addToWishlist(product) {\n    const currentWishlist = this.wishlistSubject.value;\n    const existingIndex = currentWishlist.findIndex(item => item.id === product.id);\n    if (existingIndex === -1) {\n      const updatedWishlist = [...currentWishlist, product];\n      this.wishlistSubject.next(updatedWishlist);\n      this.saveWishlist();\n    }\n  }\n  removeFromWishlist(productId) {\n    const currentWishlist = this.wishlistSubject.value;\n    const updatedWishlist = currentWishlist.filter(item => item.id !== productId);\n    this.wishlistSubject.next(updatedWishlist);\n    this.saveWishlist();\n  }\n  isInWishlist(productId) {\n    return this.wishlist$.pipe(map(items => items.some(item => item.id === productId)));\n  }\n  clearWishlist() {\n    this.wishlistSubject.next([]);\n    this.saveWishlist();\n  }\n  getWishlist() {\n    return this.wishlistSubject.value;\n  }\n  // Toggles item and returns an observable indicating the new state (e.g., true if added, false if removed)\n  toggleWishlist(productId) {\n    let currentWishlist = this.getWishlist();\n    const productIndex = currentWishlist.findIndex(item => item.id === productId);\n    let added;\n    if (productIndex > -1) {\n      currentWishlist.splice(productIndex, 1); // Remove from wishlist\n      added = false;\n    } else {\n      const product = {\n        id: productId\n      }; // Create a product object with at least the id\n      currentWishlist = [...currentWishlist, product]; // Add to wishlist\n      added = true;\n    }\n    this.wishlistSubject.next(currentWishlist);\n    this.saveWishlist();\n    return of(added); // Simulate async operation and return new state\n  }\n\n  static {\n    this.ɵfac = function WishlistService_Factory(t) {\n      return new (t || WishlistService)(i0.ɵɵinject(i1.StorageService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: WishlistService,\n      factory: WishlistService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { WishlistService };","map":{"version":3,"names":["BehaviorSubject","map","of","WishlistService","constructor","storageService","WISHLIST_KEY","wishlistSubject","wishlist$","asObservable","wishlistCount$","pipe","items","length","loadWishlist","savedWishlist","getItem","Array","isArray","next","saveWishlist","setItem","value","addToWishlist","product","currentWishlist","existingIndex","findIndex","item","id","updatedWishlist","removeFromWishlist","productId","filter","isInWishlist","some","clearWishlist","getWishlist","toggleWishlist","productIndex","added","splice","i0","ɵɵinject","i1","StorageService","factory","ɵfac","providedIn"],"sources":["/Users/stephanelkhoury/Documents/GitHub/Angular-masterclass/Ecommerce-Project/code-examples/angular-ecommerce/src/app/core/services/wishlist.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, map, of } from 'rxjs';\nimport { Product } from '../models/product.model';\nimport { StorageService } from './storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WishlistService {\n  private readonly WISHLIST_KEY = 'ecommerce_wishlist';\n  private wishlistSubject = new BehaviorSubject<Product[]>([]);\n  \n  public wishlist$ = this.wishlistSubject.asObservable();\n  public wishlistCount$ = this.wishlist$.pipe(\n    map(items => items.length)\n  );\n\n  constructor(private storageService: StorageService) {\n    this.loadWishlist();\n  }\n\n  private loadWishlist(): void {\n    const savedWishlist = this.storageService.getItem(this.WISHLIST_KEY);\n    if (savedWishlist && Array.isArray(savedWishlist)) {\n      this.wishlistSubject.next(savedWishlist);\n    }\n  }\n\n  private saveWishlist(): void {\n    this.storageService.setItem(this.WISHLIST_KEY, this.wishlistSubject.value);\n  }\n\n  addToWishlist(product: Product): void {\n    const currentWishlist = this.wishlistSubject.value;\n    const existingIndex = currentWishlist.findIndex(item => item.id === product.id);\n    \n    if (existingIndex === -1) {\n      const updatedWishlist = [...currentWishlist, product];\n      this.wishlistSubject.next(updatedWishlist);\n      this.saveWishlist();\n    }\n  }\n\n  removeFromWishlist(productId: string): void {\n    const currentWishlist = this.wishlistSubject.value;\n    const updatedWishlist = currentWishlist.filter(item => item.id !== productId);\n    this.wishlistSubject.next(updatedWishlist);\n    this.saveWishlist();\n  }\n\n  isInWishlist(productId: string): Observable<boolean> {\n    return this.wishlist$.pipe(\n      map(items => items.some(item => item.id === productId))\n    );\n  }\n\n  clearWishlist(): void {\n    this.wishlistSubject.next([]);\n    this.saveWishlist();\n  }\n\n  getWishlist(): Product[] {\n    return this.wishlistSubject.value;\n  }\n\n  // Toggles item and returns an observable indicating the new state (e.g., true if added, false if removed)\n  toggleWishlist(productId: string): Observable<boolean> {\n    let currentWishlist = this.getWishlist();\n    const productIndex = currentWishlist.findIndex(item => item.id === productId);\n    let added: boolean;\n\n    if (productIndex > -1) {\n      currentWishlist.splice(productIndex, 1); // Remove from wishlist\n      added = false;\n    } else {\n      const product = { id: productId } as Product; // Create a product object with at least the id\n      currentWishlist = [...currentWishlist, product]; // Add to wishlist\n      added = true;\n    }\n    this.wishlistSubject.next(currentWishlist);\n    this.saveWishlist();\n    return of(added); // Simulate async operation and return new state\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}