{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CartService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/cart`;\n  }\n  getCart() {\n    return this.http.get(this.apiUrl);\n  }\n  addToCart(item) {\n    return this.http.post(this.apiUrl, item);\n  }\n  removeFromCart(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  updateItemQuantity(id, quantity) {\n    return this.http.patch(`${this.apiUrl}/${id}`, {\n      quantity\n    });\n  }\n  clearCart() {\n    return this.http.delete(`${this.apiUrl}/clear`);\n  }\n  syncCart(items) {\n    return this.http.post(`${this.apiUrl}/sync`, {\n      items\n    });\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { CartService };","map":{"version":3,"names":["environment","CartService","constructor","http","apiUrl","getCart","get","addToCart","item","post","removeFromCart","id","delete","updateItemQuantity","quantity","patch","clearCart","syncCart","items","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/stephanelkhoury/Documents/GitHub/Angular-masterclass/25-Ecommerce-Project/code-examples/angular-ecommerce/src/app/core/services/cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { CartItem } from '../../store/reducers/cart.reducer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  private apiUrl = `${environment.apiUrl}/cart`;\n\n  constructor(private http: HttpClient) {}\n\n  getCart(): Observable<CartItem[]> {\n    return this.http.get<CartItem[]>(this.apiUrl);\n  }\n\n  addToCart(item: CartItem): Observable<CartItem> {\n    return this.http.post<CartItem>(this.apiUrl, item);\n  }\n\n  removeFromCart(id: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n\n  updateItemQuantity(id: string, quantity: number): Observable<CartItem> {\n    return this.http.patch<CartItem>(`${this.apiUrl}/${id}`, { quantity });\n  }\n\n  clearCart(): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/clear`);\n  }\n\n  syncCart(items: CartItem[]): Observable<void> {\n    return this.http.post<void>(`${this.apiUrl}/sync`, { items });\n  }\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,mCAAmC;;;AAG/D,MAGaC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,OAAO;EAEN;EAEvCC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACF,MAAM,CAAC;EAC/C;EAEAG,SAASA,CAACC,IAAc;IACtB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAW,IAAI,CAACL,MAAM,EAAEI,IAAI,CAAC;EACpD;EAEAE,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAO,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE,CAAC;EACvD;EAEAE,kBAAkBA,CAACF,EAAU,EAAEG,QAAgB;IAC7C,OAAO,IAAI,CAACX,IAAI,CAACY,KAAK,CAAW,GAAG,IAAI,CAACX,MAAM,IAAIO,EAAE,EAAE,EAAE;MAAEG;IAAQ,CAAE,CAAC;EACxE;EAEAE,SAASA,CAAA;IACP,OAAO,IAAI,CAACb,IAAI,CAACS,MAAM,CAAO,GAAG,IAAI,CAACR,MAAM,QAAQ,CAAC;EACvD;EAEAa,QAAQA,CAACC,KAAiB;IACxB,OAAO,IAAI,CAACf,IAAI,CAACM,IAAI,CAAO,GAAG,IAAI,CAACL,MAAM,OAAO,EAAE;MAAEc;IAAK,CAAE,CAAC;EAC/D;;;uBA3BWjB,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXrB,WAAW;MAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA;;SAEPxB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}