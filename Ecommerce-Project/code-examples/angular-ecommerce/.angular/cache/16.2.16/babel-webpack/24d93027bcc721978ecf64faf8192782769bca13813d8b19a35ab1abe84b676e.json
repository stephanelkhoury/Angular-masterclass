{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as ProductActions from '../actions/product.actions';\nexport const initialState = {\n  items: [],\n  categories: [],\n  reviews: [],\n  selectedProduct: null,\n  currentProduct: null,\n  total: 0,\n  loading: false,\n  error: null\n};\nexport const reducer = createReducer(initialState,\n// Load Products\non(ProductActions.loadProducts, state => {\n  console.log('Products Reducer: loadProducts action received');\n  return {\n    ...state,\n    loading: true,\n    error: null\n  };\n}), on(ProductActions.loadProductsSuccess, (state, {\n  paginatedResponse\n}) => {\n  console.log('Products Reducer: loadProductsSuccess action received', paginatedResponse);\n  return {\n    ...state,\n    items: paginatedResponse.items,\n    total: paginatedResponse.totalCount,\n    loading: false,\n    error: null\n  };\n}), on(ProductActions.loadProductsFailure, (state, {\n  error\n}) => {\n  console.log('Products Reducer: loadProductsFailure action received', error);\n  return {\n    ...state,\n    loading: false,\n    error: error\n  };\n}),\n// Load Product By ID\non(ProductActions.loadProductById, state => ({\n  ...state,\n  loading: true,\n  error: null\n})), on(ProductActions.loadProductByIdSuccess, (state, {\n  product\n}) => ({\n  ...state,\n  currentProduct: product,\n  selectedProduct: product,\n  loading: false,\n  error: null\n})), on(ProductActions.loadProductByIdFailure, (state, {\n  error\n}) => ({\n  ...state,\n  loading: false,\n  error: error\n})),\n// Load Categories\non(ProductActions.loadCategories, state => {\n  console.log('Products Reducer: loadCategories action received');\n  return {\n    ...state,\n    loading: true,\n    error: null\n  };\n}), on(ProductActions.loadCategoriesSuccess, (state, {\n  categories\n}) => {\n  console.log('Products Reducer: loadCategoriesSuccess action received', categories);\n  return {\n    ...state,\n    categories: categories,\n    loading: false,\n    error: null\n  };\n}), on(ProductActions.loadCategoriesFailure, (state, {\n  error\n}) => {\n  console.log('Products Reducer: loadCategoriesFailure action received', error);\n  return {\n    ...state,\n    loading: false,\n    error: error\n  };\n}));","map":{"version":3,"names":["createReducer","on","ProductActions","initialState","items","categories","reviews","selectedProduct","currentProduct","total","loading","error","reducer","loadProducts","state","console","log","loadProductsSuccess","paginatedResponse","totalCount","loadProductsFailure","loadProductById","loadProductByIdSuccess","product","loadProductByIdFailure","loadCategories","loadCategoriesSuccess","loadCategoriesFailure"],"sources":["/Users/stephanelkhoury/Documents/GitHub/Angular-masterclass/Ecommerce-Project/code-examples/angular-ecommerce/src/app/store/reducers/products.reducer.ts"],"sourcesContent":["import { createReducer, on } from '@ngrx/store';\nimport { Product, Category, Review } from '../../core/models/product.model';\nimport * as ProductActions from '../actions/product.actions';\n\nexport interface State {\n  items: Product[];\n  categories: Category[];\n  reviews: Review[];\n  selectedProduct: Product | null;\n  currentProduct: Product | null;\n  total: number;\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface ProductState extends State {} // Add alias for ProductState\n\nexport const initialState: State = {\n  items: [],\n  categories: [],\n  reviews: [],\n  selectedProduct: null,\n  currentProduct: null,\n  total: 0,\n  loading: false,\n  error: null\n};\n\nexport const reducer = createReducer(\n  initialState,\n  \n  // Load Products\n  on(ProductActions.loadProducts, (state) => {\n    console.log('Products Reducer: loadProducts action received');\n    return {\n      ...state,\n      loading: true,\n      error: null\n    };\n  }),\n  \n  on(ProductActions.loadProductsSuccess, (state, { paginatedResponse }) => {\n    console.log('Products Reducer: loadProductsSuccess action received', paginatedResponse);\n    return {\n      ...state,\n      items: paginatedResponse.items,\n      total: paginatedResponse.totalCount,\n      loading: false,\n      error: null\n    };\n  }),\n  \n  on(ProductActions.loadProductsFailure, (state, { error }) => {\n    console.log('Products Reducer: loadProductsFailure action received', error);\n    return {\n      ...state,\n      loading: false,\n      error: error\n    };\n  }),\n  \n  // Load Product By ID\n  on(ProductActions.loadProductById, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  \n  on(ProductActions.loadProductByIdSuccess, (state, { product }) => ({\n    ...state,\n    currentProduct: product,\n    selectedProduct: product,\n    loading: false,\n    error: null\n  })),\n  \n  on(ProductActions.loadProductByIdFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error: error\n  })),\n  \n  // Load Categories\n  on(ProductActions.loadCategories, (state) => {\n    console.log('Products Reducer: loadCategories action received');\n    return {\n      ...state,\n      loading: true,\n      error: null\n    };\n  }),\n  \n  on(ProductActions.loadCategoriesSuccess, (state, { categories }) => {\n    console.log('Products Reducer: loadCategoriesSuccess action received', categories);\n    return {\n      ...state,\n      categories: categories,\n      loading: false,\n      error: null\n    };\n  }),\n  \n  on(ProductActions.loadCategoriesFailure, (state, { error }) => {\n    console.log('Products Reducer: loadCategoriesFailure action received', error);\n    return {\n      ...state,\n      loading: false,\n      error: error\n    };\n  })\n);\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAE/C,OAAO,KAAKC,cAAc,MAAM,4BAA4B;AAe5D,OAAO,MAAMC,YAAY,GAAU;EACjCC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE,EAAE;EACXC,eAAe,EAAE,IAAI;EACrBC,cAAc,EAAE,IAAI;EACpBC,KAAK,EAAE,CAAC;EACRC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;CACR;AAED,OAAO,MAAMC,OAAO,GAAGZ,aAAa,CAClCG,YAAY;AAEZ;AACAF,EAAE,CAACC,cAAc,CAACW,YAAY,EAAGC,KAAK,IAAI;EACxCC,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;EAC7D,OAAO;IACL,GAAGF,KAAK;IACRJ,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE;GACR;AACH,CAAC,CAAC,EAEFV,EAAE,CAACC,cAAc,CAACe,mBAAmB,EAAE,CAACH,KAAK,EAAE;EAAEI;AAAiB,CAAE,KAAI;EACtEH,OAAO,CAACC,GAAG,CAAC,uDAAuD,EAAEE,iBAAiB,CAAC;EACvF,OAAO;IACL,GAAGJ,KAAK;IACRV,KAAK,EAAEc,iBAAiB,CAACd,KAAK;IAC9BK,KAAK,EAAES,iBAAiB,CAACC,UAAU;IACnCT,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;GACR;AACH,CAAC,CAAC,EAEFV,EAAE,CAACC,cAAc,CAACkB,mBAAmB,EAAE,CAACN,KAAK,EAAE;EAAEH;AAAK,CAAE,KAAI;EAC1DI,OAAO,CAACC,GAAG,CAAC,uDAAuD,EAAEL,KAAK,CAAC;EAC3E,OAAO;IACL,GAAGG,KAAK;IACRJ,OAAO,EAAE,KAAK;IACdC,KAAK,EAAEA;GACR;AACH,CAAC,CAAC;AAEF;AACAV,EAAE,CAACC,cAAc,CAACmB,eAAe,EAAGP,KAAK,KAAM;EAC7C,GAAGA,KAAK;EACRJ,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE;CACR,CAAC,CAAC,EAEHV,EAAE,CAACC,cAAc,CAACoB,sBAAsB,EAAE,CAACR,KAAK,EAAE;EAAES;AAAO,CAAE,MAAM;EACjE,GAAGT,KAAK;EACRN,cAAc,EAAEe,OAAO;EACvBhB,eAAe,EAAEgB,OAAO;EACxBb,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;CACR,CAAC,CAAC,EAEHV,EAAE,CAACC,cAAc,CAACsB,sBAAsB,EAAE,CAACV,KAAK,EAAE;EAAEH;AAAK,CAAE,MAAM;EAC/D,GAAGG,KAAK;EACRJ,OAAO,EAAE,KAAK;EACdC,KAAK,EAAEA;CACR,CAAC,CAAC;AAEH;AACAV,EAAE,CAACC,cAAc,CAACuB,cAAc,EAAGX,KAAK,IAAI;EAC1CC,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;EAC/D,OAAO;IACL,GAAGF,KAAK;IACRJ,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE;GACR;AACH,CAAC,CAAC,EAEFV,EAAE,CAACC,cAAc,CAACwB,qBAAqB,EAAE,CAACZ,KAAK,EAAE;EAAET;AAAU,CAAE,KAAI;EACjEU,OAAO,CAACC,GAAG,CAAC,yDAAyD,EAAEX,UAAU,CAAC;EAClF,OAAO;IACL,GAAGS,KAAK;IACRT,UAAU,EAAEA,UAAU;IACtBK,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;GACR;AACH,CAAC,CAAC,EAEFV,EAAE,CAACC,cAAc,CAACyB,qBAAqB,EAAE,CAACb,KAAK,EAAE;EAAEH;AAAK,CAAE,KAAI;EAC5DI,OAAO,CAACC,GAAG,CAAC,yDAAyD,EAAEL,KAAK,CAAC;EAC7E,OAAO;IACL,GAAGG,KAAK;IACRJ,OAAO,EAAE,KAAK;IACdC,KAAK,EAAEA;GACR;AACH,CAAC,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}