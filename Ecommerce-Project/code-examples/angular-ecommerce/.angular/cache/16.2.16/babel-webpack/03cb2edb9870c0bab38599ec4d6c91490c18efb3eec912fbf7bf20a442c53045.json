{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nlet HeaderComponent = class HeaderComponent {\n  constructor(store, authService, cartService, router) {\n    this.store = store;\n    this.authService = authService;\n    this.cartService = cartService;\n    this.router = router;\n    // Search functionality\n    this.searchControl = new FormControl('');\n    this.searchSuggestions = [];\n    this.showSearchSuggestions = false;\n    this.mobileSearchOpen = false;\n    // Mobile menu state\n    this.mobileMenuOpen = false;\n    this.megaMenuOpen = false;\n    // Categories for mega menu\n    this.categories = [{\n      name: 'Electronics',\n      icon: 'devices',\n      subcategories: ['Smartphones', 'Laptops', 'Tablets', 'Accessories']\n    }, {\n      name: 'Fashion',\n      icon: 'checkroom',\n      subcategories: ['Men\\'s Clothing', 'Women\\'s Clothing', 'Shoes', 'Bags']\n    }, {\n      name: 'Home & Garden',\n      icon: 'home',\n      subcategories: ['Furniture', 'Decor', 'Kitchen', 'Garden']\n    }, {\n      name: 'Sports',\n      icon: 'sports_soccer',\n      subcategories: ['Fitness', 'Outdoor', 'Team Sports', 'Equipment']\n    }];\n    // User notifications (mock data)\n    this.notificationsSubject = new BehaviorSubject([{\n      id: 1,\n      message: 'Your order has been shipped!',\n      type: 'success',\n      timestamp: new Date(),\n      read: false\n    }, {\n      id: 2,\n      message: 'New products available in Electronics',\n      type: 'info',\n      timestamp: new Date(),\n      read: false\n    }]);\n    // Mobile detection\n    this.isMobile = false;\n    this.isLoggedIn$ = this.store.select(state => !!state.auth.user);\n    this.currentUser$ = this.store.select(state => state.auth.user);\n    this.cartItems$ = this.store.select(state => state.cart.items);\n    this.cartItemCount$ = this.store.select(state => state.cart.items.reduce((count, item) => count + item.quantity, 0));\n    this.isAdmin$ = this.store.select(state => state.auth.user?.role === 'admin');\n    // Mock observables for wishlist and notifications\n    this.wishlistCount$ = new BehaviorSubject(3).asObservable();\n    this.notificationCount$ = this.notificationsSubject.pipe(map(notifications => notifications.filter(n => !n.read).length));\n    this.detectMobile();\n  }\n  ngOnInit() {\n    // Load cart items when component initializes\n    this.cartService.loadCart();\n  }\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/']);\n  }\n  toggleMobileMenu() {\n    this.mobileMenuOpen = !this.mobileMenuOpen;\n  }\n};\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})], HeaderComponent);\nexport { HeaderComponent };","map":{"version":3,"names":["Component","FormControl","BehaviorSubject","HeaderComponent","constructor","store","authService","cartService","router","searchControl","searchSuggestions","showSearchSuggestions","mobileSearchOpen","mobileMenuOpen","megaMenuOpen","categories","name","icon","subcategories","notificationsSubject","id","message","type","timestamp","Date","read","isMobile","isLoggedIn$","select","state","auth","user","currentUser$","cartItems$","cart","items","cartItemCount$","reduce","count","item","quantity","isAdmin$","role","wishlistCount$","asObservable","notificationCount$","pipe","map","notifications","filter","n","length","detectMobile","ngOnInit","loadCart","logout","navigate","toggleMobileMenu","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/stephanelkhoury/Documents/GitHub/Angular-masterclass/25-Ecommerce-Project/code-examples/angular-ecommerce/src/app/shared/components/header/header.component.ts"],"sourcesContent":["import { Component, OnInit, HostListener } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\n\nimport { AppState } from '../../../store';\nimport { User } from '../../../core/models/user.model';\nimport { CartItem } from '../../../core/models/cart.model';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { CartService } from '../../../core/services/cart.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  isLoggedIn$: Observable<boolean>;\n  currentUser$: Observable<User | null>;\n  cartItems$: Observable<CartItem[]>;\n  cartItemCount$: Observable<number>;\n  isAdmin$: Observable<boolean>;\n  wishlistCount$: Observable<number>;\n  notificationCount$: Observable<number>;\n\n  // Search functionality\n  searchControl = new FormControl('');\n  searchSuggestions: string[] = [];\n  showSearchSuggestions = false;\n  mobileSearchOpen = false;\n\n  // Mobile menu state\n  mobileMenuOpen = false;\n  megaMenuOpen = false;\n\n  // Categories for mega menu\n  categories = [\n    {\n      name: 'Electronics',\n      icon: 'devices',\n      subcategories: ['Smartphones', 'Laptops', 'Tablets', 'Accessories']\n    },\n    {\n      name: 'Fashion',\n      icon: 'checkroom',\n      subcategories: ['Men\\'s Clothing', 'Women\\'s Clothing', 'Shoes', 'Bags']\n    },\n    {\n      name: 'Home & Garden',\n      icon: 'home',\n      subcategories: ['Furniture', 'Decor', 'Kitchen', 'Garden']\n    },\n    {\n      name: 'Sports',\n      icon: 'sports_soccer',\n      subcategories: ['Fitness', 'Outdoor', 'Team Sports', 'Equipment']\n    }\n  ];\n\n  // User notifications (mock data)\n  private notificationsSubject = new BehaviorSubject<any[]>([\n    {\n      id: 1,\n      message: 'Your order has been shipped!',\n      type: 'success',\n      timestamp: new Date(),\n      read: false\n    },\n    {\n      id: 2,\n      message: 'New products available in Electronics',\n      type: 'info',\n      timestamp: new Date(),\n      read: false\n    }\n  ]);\n\n  // Mobile detection\n  isMobile = false;\n\n  constructor(\n    private store: Store<AppState>,\n    private authService: AuthService,\n    private cartService: CartService,\n    private router: Router\n  ) {\n    this.isLoggedIn$ = this.store.select(state => !!state.auth.user);\n    this.currentUser$ = this.store.select(state => state.auth.user);\n    this.cartItems$ = this.store.select(state => state.cart.items);\n    this.cartItemCount$ = this.store.select(state => \n      state.cart.items.reduce((count: number, item: CartItem) => count + item.quantity, 0)\n    );\n    this.isAdmin$ = this.store.select(state => state.auth.user?.role === 'admin');\n    \n    // Mock observables for wishlist and notifications\n    this.wishlistCount$ = new BehaviorSubject(3).asObservable();\n    this.notificationCount$ = this.notificationsSubject.pipe(\n      map((notifications: any[]) => notifications.filter(n => !n.read).length)\n    );\n\n    this.detectMobile();\n  }\n\n  ngOnInit(): void {\n    // Load cart items when component initializes\n    this.cartService.loadCart();\n  }\n\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/']);\n  }\n\n  toggleMobileMenu(): void {\n    this.mobileMenuOpen = !this.mobileMenuOpen;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}