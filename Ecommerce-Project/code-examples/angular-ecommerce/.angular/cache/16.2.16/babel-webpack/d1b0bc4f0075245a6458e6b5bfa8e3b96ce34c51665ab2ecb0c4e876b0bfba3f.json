{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./notification.service\";\nimport * as i3 from \"./mock-data.service\";\nclass ProductService {\n  constructor(http, notificationService, mockDataService) {\n    this.http = http;\n    this.notificationService = notificationService;\n    this.mockDataService = mockDataService;\n    this.apiUrl = `${environment.apiUrl}/products`;\n    this.categoriesUrl = `${environment.apiUrl}/categories`;\n    this.mockProducts = [{\n      id: '1',\n      name: 'Smartphone X',\n      description: 'Latest model smartphone with advanced features.',\n      price: 799.99,\n      imageUrl: 'https://via.placeholder.com/300x300.png?text=Smartphone+X',\n      category: 'Electronics',\n      stock: 50,\n      rating: 4.5,\n      brand: 'TechCorp'\n    }, {\n      id: '2',\n      name: 'Laptop Pro',\n      description: 'High-performance laptop for professionals.',\n      price: 1299.00,\n      imageUrl: 'https://via.placeholder.com/300x300.png?text=Laptop+Pro',\n      category: 'Electronics',\n      stock: 30,\n      rating: 4.8,\n      brand: 'CompSys'\n    }, {\n      id: '3',\n      name: 'Wireless Headphones',\n      description: 'Noise-cancelling wireless headphones.',\n      price: 199.50,\n      imageUrl: 'https://via.placeholder.com/300x300.png?text=Headphones',\n      category: 'Electronics',\n      stock: 100,\n      rating: 4.3,\n      brand: 'AudioPhile'\n    }, {\n      id: '4',\n      name: 'Men\\'s Casual Shirt',\n      description: 'Comfortable cotton casual shirt.',\n      price: 45.00,\n      imageUrl: 'https://via.placeholder.com/300x300.png?text=Casual+Shirt',\n      category: 'Fashion',\n      stock: 120,\n      rating: 4.0,\n      brand: 'ClothCo'\n    }, {\n      id: '5',\n      name: 'Running Shoes',\n      description: 'Lightweight running shoes for athletes.',\n      price: 89.99,\n      imageUrl: 'https://via.placeholder.com/300x300.png?text=Running+Shoes',\n      category: 'Fashion',\n      stock: 75,\n      rating: 4.6,\n      brand: 'FitGear'\n    }, {\n      id: '6',\n      name: 'Coffee Maker',\n      description: 'Drip coffee maker with timer.',\n      price: 59.95,\n      imageUrl: 'https://via.placeholder.com/300x300.png?text=Coffee+Maker',\n      category: 'Home & Garden',\n      stock: 60,\n      rating: 4.2,\n      brand: 'HomeEase'\n    }];\n  }\n  getProducts(options = {}) {\n    // Use mock data in development\n    if (environment.useMockData) {\n      return this.mockDataService.getProducts(options);\n    }\n    let params = new HttpParams();\n    if (options.page) params = params.set('page', options.page.toString());\n    if (options.limit) params = params.set('limit', options.limit.toString());\n    if (options.sortBy) params = params.set('sortBy', options.sortBy);\n    if (options.order) params = params.set('order', options.order);\n    if (options.category) params = params.set('category', options.category);\n    if (options.minPrice) params = params.set('minPrice', options.minPrice.toString());\n    if (options.maxPrice) params = params.set('maxPrice', options.maxPrice.toString());\n    if (options.search) params = params.set('search', options.search);\n    return this.http.get(this.apiUrl, {\n      params\n    }).pipe(catchError(this.handleError('Failed to load products')));\n  }\n  getProductById(id) {\n    // Use mock data in development\n    if (environment.useMockData) {\n      return this.mockDataService.getProductById(id);\n    }\n    return this.http.get(`${this.apiUrl}/${id}`).pipe(catchError(this.handleError('Failed to load product details')));\n  }\n  getCategories() {\n    // Use mock data in development\n    if (environment.useMockData) {\n      return this.mockDataService.getCategories();\n    }\n    return this.http.get(this.categoriesUrl).pipe(map(categories => this.buildCategoryTree(categories)), catchError(this.handleError('Failed to load categories')));\n  }\n  getProductReviews(productId, page = 1, limit = 10) {\n    // Use mock data in development\n    if (environment.useMockData) {\n      return this.mockDataService.getProductReviews(productId, page, limit);\n    }\n    const params = new HttpParams().set('page', page.toString()).set('limit', limit.toString());\n    return this.http.get(`${this.apiUrl}/${productId}/reviews`, {\n      params\n    }).pipe(catchError(this.handleError('Failed to load product reviews')));\n  }\n  addProductReview(productId, review) {\n    return this.http.post(`${this.apiUrl}/${productId}/reviews`, review).pipe(catchError(this.handleError('Failed to submit your review')));\n  }\n  getFeaturedProducts(limit = 8) {\n    // Use mock data in development\n    if (environment.useMockData) {\n      return this.mockDataService.getFeaturedProducts(limit);\n    }\n    const params = new HttpParams().set('limit', limit.toString()).set('featured', 'true');\n    return this.http.get(this.apiUrl, {\n      params\n    }).pipe(map(response => response.products), catchError(this.handleError('Failed to load featured products')));\n  }\n  getRelatedProducts(productId, limit = 4) {\n    const params = new HttpParams().set('limit', limit.toString());\n    return this.http.get(`${this.apiUrl}/${productId}/related`, {\n      params\n    }).pipe(catchError(this.handleError('Failed to load related products')));\n  }\n  buildCategoryTree(categories) {\n    // Create a map for faster lookup\n    const categoryMap = new Map();\n    categories.forEach(category => {\n      categoryMap.set(category.id, {\n        ...category,\n        children: []\n      });\n    });\n    // Identify top-level categories and build hierarchy\n    const rootCategories = [];\n    categoryMap.forEach(category => {\n      if (!category.parentId) {\n        rootCategories.push(category);\n      } else {\n        const parent = categoryMap.get(category.parentId);\n        if (parent) {\n          parent.children = parent.children || [];\n          parent.children.push(category);\n        }\n      }\n    });\n    return rootCategories;\n  }\n  handleError(message) {\n    return error => {\n      this.notificationService.error(message);\n      throw error;\n    };\n  }\n  // Store management methods\n  loadProducts() {\n    return this.getProducts().pipe(map(response => response.products));\n  }\n  loadCategories() {\n    return this.getCategories();\n  }\n  loadProductById(id) {\n    return this.getProductById(id);\n  }\n  static {\n    this.ɵfac = function ProductService_Factory(t) {\n      return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.NotificationService), i0.ɵɵinject(i3.MockDataService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductService,\n      factory: ProductService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { ProductService };","map":{"version":3,"names":["HttpParams","catchError","map","environment","ProductService","constructor","http","notificationService","mockDataService","apiUrl","categoriesUrl","mockProducts","id","name","description","price","imageUrl","category","stock","rating","brand","getProducts","options","useMockData","params","page","set","toString","limit","sortBy","order","minPrice","maxPrice","search","get","pipe","handleError","getProductById","getCategories","categories","buildCategoryTree","getProductReviews","productId","addProductReview","review","post","getFeaturedProducts","response","products","getRelatedProducts","categoryMap","Map","forEach","children","rootCategories","parentId","push","parent","message","error","loadProducts","loadCategories","loadProductById","i0","ɵɵinject","i1","HttpClient","i2","NotificationService","i3","MockDataService","factory","ɵfac","providedIn"],"sources":["/Users/stephanelkhoury/Documents/GitHub/Angular-masterclass/Ecommerce-Project/code-examples/angular-ecommerce/src/app/core/services/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { NotificationService } from './notification.service';\nimport { MockDataService } from './mock-data.service';\nimport { Product, Category, Review } from '../models/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private apiUrl = `${environment.apiUrl}/products`;\n  private categoriesUrl = `${environment.apiUrl}/categories`;\n  \n  private mockProducts: Product[] = [\n    { id: '1', name: 'Smartphone X', description: 'Latest model smartphone with advanced features.', price: 799.99, imageUrl: 'https://via.placeholder.com/300x300.png?text=Smartphone+X', category: 'Electronics', stock: 50, rating: 4.5, brand: 'TechCorp' },\n    { id: '2', name: 'Laptop Pro', description: 'High-performance laptop for professionals.', price: 1299.00, imageUrl: 'https://via.placeholder.com/300x300.png?text=Laptop+Pro', category: 'Electronics', stock: 30, rating: 4.8, brand: 'CompSys' },\n    { id: '3', name: 'Wireless Headphones', description: 'Noise-cancelling wireless headphones.', price: 199.50, imageUrl: 'https://via.placeholder.com/300x300.png?text=Headphones', category: 'Electronics', stock: 100, rating: 4.3, brand: 'AudioPhile' },\n    { id: '4', name: 'Men\\'s Casual Shirt', description: 'Comfortable cotton casual shirt.', price: 45.00, imageUrl: 'https://via.placeholder.com/300x300.png?text=Casual+Shirt', category: 'Fashion', stock: 120, rating: 4.0, brand: 'ClothCo' },\n    { id: '5', name: 'Running Shoes', description: 'Lightweight running shoes for athletes.', price: 89.99, imageUrl: 'https://via.placeholder.com/300x300.png?text=Running+Shoes', category: 'Fashion', stock: 75, rating: 4.6, brand: 'FitGear' },\n    { id: '6', name: 'Coffee Maker', description: 'Drip coffee maker with timer.', price: 59.95, imageUrl: 'https://via.placeholder.com/300x300.png?text=Coffee+Maker', category: 'Home & Garden', stock: 60, rating: 4.2, brand: 'HomeEase' },\n  ];\n  \n  constructor(\n    private http: HttpClient,\n    private notificationService: NotificationService,\n    private mockDataService: MockDataService\n  ) {}\n\n  getProducts(options: {\n    page?: number;\n    limit?: number;\n    sortBy?: string;\n    order?: 'asc' | 'desc';\n    category?: string;\n    minPrice?: number;\n    maxPrice?: number;\n    search?: string;\n  } = {}): Observable<{ products: Product[]; totalCount: number; page: number; limit: number }> {\n    \n    // Use mock data in development\n    if (environment.useMockData) {\n      return this.mockDataService.getProducts(options);\n    }\n    \n    let params = new HttpParams();\n    \n    if (options.page) params = params.set('page', options.page.toString());\n    if (options.limit) params = params.set('limit', options.limit.toString());\n    if (options.sortBy) params = params.set('sortBy', options.sortBy);\n    if (options.order) params = params.set('order', options.order);\n    if (options.category) params = params.set('category', options.category);\n    if (options.minPrice) params = params.set('minPrice', options.minPrice.toString());\n    if (options.maxPrice) params = params.set('maxPrice', options.maxPrice.toString());\n    if (options.search) params = params.set('search', options.search);\n    \n    return this.http.get<{ products: Product[]; totalCount: number; page: number; limit: number }>(\n      this.apiUrl,\n      { params }\n    ).pipe(\n      catchError(this.handleError('Failed to load products'))\n    );\n  }\n\n  getProductById(id: string): Observable<Product> {\n    // Use mock data in development\n    if (environment.useMockData) {\n      return this.mockDataService.getProductById(id);\n    }\n    \n    return this.http.get<Product>(`${this.apiUrl}/${id}`).pipe(\n      catchError(this.handleError('Failed to load product details'))\n    );\n  }\n\n  getCategories(): Observable<Category[]> {\n    // Use mock data in development\n    if (environment.useMockData) {\n      return this.mockDataService.getCategories();\n    }\n    \n    return this.http.get<Category[]>(this.categoriesUrl).pipe(\n      map(categories => this.buildCategoryTree(categories)),\n      catchError(this.handleError('Failed to load categories'))\n    );\n  }\n\n  getProductReviews(productId: string, page = 1, limit = 10): Observable<{ reviews: Review[]; totalCount: number }> {\n    // Use mock data in development\n    if (environment.useMockData) {\n      return this.mockDataService.getProductReviews(productId, page, limit);\n    }\n    \n    const params = new HttpParams()\n      .set('page', page.toString())\n      .set('limit', limit.toString());\n    \n    return this.http.get<{ reviews: Review[]; totalCount: number }>(\n      `${this.apiUrl}/${productId}/reviews`,\n      { params }\n    ).pipe(\n      catchError(this.handleError('Failed to load product reviews'))\n    );\n  }\n\n  addProductReview(productId: string, review: { rating: number; title: string; comment: string }): Observable<Review> {\n    return this.http.post<Review>(\n      `${this.apiUrl}/${productId}/reviews`,\n      review\n    ).pipe(\n      catchError(this.handleError('Failed to submit your review'))\n    );\n  }\n\n  getFeaturedProducts(limit = 8): Observable<Product[]> {\n    // Use mock data in development\n    if (environment.useMockData) {\n      return this.mockDataService.getFeaturedProducts(limit);\n    }\n    \n    const params = new HttpParams().set('limit', limit.toString()).set('featured', 'true');\n    \n    return this.http.get<{ products: Product[] }>(this.apiUrl, { params }).pipe(\n      map(response => response.products),\n      catchError(this.handleError('Failed to load featured products'))\n    );\n  }\n\n  getRelatedProducts(productId: string, limit = 4): Observable<Product[]> {\n    const params = new HttpParams().set('limit', limit.toString());\n    \n    return this.http.get<Product[]>(`${this.apiUrl}/${productId}/related`, { params }).pipe(\n      catchError(this.handleError('Failed to load related products'))\n    );\n  }\n\n  private buildCategoryTree(categories: Category[]): Category[] {\n    // Create a map for faster lookup\n    const categoryMap = new Map<string, Category>();\n    categories.forEach(category => {\n      categoryMap.set(category.id, { ...category, children: [] });\n    });\n    \n    // Identify top-level categories and build hierarchy\n    const rootCategories: Category[] = [];\n    categoryMap.forEach(category => {\n      if (!category.parentId) {\n        rootCategories.push(category);\n      } else {\n        const parent = categoryMap.get(category.parentId);\n        if (parent) {\n          parent.children = parent.children || [];\n          parent.children.push(category);\n        }\n      }\n    });\n    \n    return rootCategories;\n  }\n\n  private handleError(message: string) {\n    return (error: any): Observable<never> => {\n      this.notificationService.error(message);\n      throw error;\n    };\n  }\n\n  // Store management methods\n  loadProducts(): Observable<Product[]> {\n    return this.getProducts().pipe(\n      map(response => response.products)\n    );\n  }\n\n  loadCategories(): Observable<Category[]> {\n    return this.getCategories();\n  }\n\n  loadProductById(id: string): Observable<Product> {\n    return this.getProductById(id);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}