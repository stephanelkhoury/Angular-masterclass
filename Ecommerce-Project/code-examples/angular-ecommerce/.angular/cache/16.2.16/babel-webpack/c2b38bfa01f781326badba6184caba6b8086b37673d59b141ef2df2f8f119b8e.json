{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { updateCartItemQuantity, removeFromCart, clearCart } from '../../store/actions/cart.actions';\nimport { selectCartItems, selectCartTotal, selectCartItemCount } from '../../store/selectors/cart.selectors';\nlet CartComponent = class CartComponent {\n  constructor(store) {\n    this.store = store;\n    this.cartItems$ = this.store.select(selectCartItems);\n    this.total$ = this.store.select(selectCartTotal);\n    this.itemCount$ = this.store.select(selectCartItemCount);\n  }\n  ngOnInit() {}\n  increaseQuantity(item) {\n    this.store.dispatch(updateCartItemQuantity({\n      productId: item.productId,\n      quantity: item.quantity + 1\n    }));\n  }\n  decreaseQuantity(item) {\n    if (item.quantity > 1) {\n      this.store.dispatch(updateCartItemQuantity({\n        productId: item.productId,\n        quantity: item.quantity - 1\n      }));\n    }\n  }\n  removeItem(item) {\n    this.store.dispatch(removeFromCart({\n      productId: item.productId\n    }));\n  }\n  clearCart() {\n    this.store.dispatch(clearCart());\n  }\n};\nCartComponent = __decorate([Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss'],\n  styles: [`\n    .cart-container {\n      max-width: 800px;\n      margin: 0 auto;\n      padding: 20px;\n    }\n    \n    .cart-item {\n      display: flex;\n      gap: 15px;\n      padding: 15px;\n      border-bottom: 1px solid #eee;\n    }\n    \n    .item-image {\n      width: 80px;\n      height: 80px;\n      object-fit: cover;\n    }\n    \n    .item-details {\n      flex: 1;\n    }\n    \n    .quantity-controls {\n      display: flex;\n      align-items: center;\n      gap: 10px;\n      margin: 10px 0;\n    }\n    \n    .quantity-controls button {\n      width: 30px;\n      height: 30px;\n      border: 1px solid #ccc;\n      background: white;\n      cursor: pointer;\n    }\n    \n    .cart-actions {\n      margin-top: 20px;\n      display: flex;\n      gap: 15px;\n    }\n    \n    .checkout-btn {\n      background: #007bff;\n      color: white;\n      padding: 10px 20px;\n      border: none;\n      cursor: pointer;\n    }\n    \n    .clear-btn, .remove-btn {\n      background: #dc3545;\n      color: white;\n      padding: 5px 10px;\n      border: none;\n      cursor: pointer;\n    }\n    \n    .empty-cart {\n      text-align: center;\n      padding: 40px;\n    }\n    \n    .continue-shopping {\n      background: #28a745;\n      color: white;\n      padding: 10px 20px;\n      border: none;\n      cursor: pointer;\n    }\n  `]\n})], CartComponent);\nexport { CartComponent };","map":{"version":3,"names":["Component","updateCartItemQuantity","removeFromCart","clearCart","selectCartItems","selectCartTotal","selectCartItemCount","CartComponent","constructor","store","cartItems$","select","total$","itemCount$","ngOnInit","increaseQuantity","item","dispatch","productId","quantity","decreaseQuantity","removeItem","__decorate","selector","templateUrl","styleUrls","styles"],"sources":["/Users/stephanelkhoury/Documents/GitHub/Angular-masterclass/25-Ecommerce-Project/code-examples/angular-ecommerce/src/app/features/cart/cart.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { CartItem } from '../../core/models/cart-item.model';\nimport { updateCartItemQuantity, removeFromCart, clearCart } from '../../store/actions/cart.actions';\nimport { selectCartItems, selectCartTotal, selectCartItemCount } from '../../store/selectors/cart.selectors';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n  styles: [`\n    .cart-container {\n      max-width: 800px;\n      margin: 0 auto;\n      padding: 20px;\n    }\n    \n    .cart-item {\n      display: flex;\n      gap: 15px;\n      padding: 15px;\n      border-bottom: 1px solid #eee;\n    }\n    \n    .item-image {\n      width: 80px;\n      height: 80px;\n      object-fit: cover;\n    }\n    \n    .item-details {\n      flex: 1;\n    }\n    \n    .quantity-controls {\n      display: flex;\n      align-items: center;\n      gap: 10px;\n      margin: 10px 0;\n    }\n    \n    .quantity-controls button {\n      width: 30px;\n      height: 30px;\n      border: 1px solid #ccc;\n      background: white;\n      cursor: pointer;\n    }\n    \n    .cart-actions {\n      margin-top: 20px;\n      display: flex;\n      gap: 15px;\n    }\n    \n    .checkout-btn {\n      background: #007bff;\n      color: white;\n      padding: 10px 20px;\n      border: none;\n      cursor: pointer;\n    }\n    \n    .clear-btn, .remove-btn {\n      background: #dc3545;\n      color: white;\n      padding: 5px 10px;\n      border: none;\n      cursor: pointer;\n    }\n    \n    .empty-cart {\n      text-align: center;\n      padding: 40px;\n    }\n    \n    .continue-shopping {\n      background: #28a745;\n      color: white;\n      padding: 10px 20px;\n      border: none;\n      cursor: pointer;\n    }\n  `]\n})\nexport class CartComponent implements OnInit {\n  cartItems$: Observable<CartItem[]>;\n  total$: Observable<number>;\n  itemCount$: Observable<number>;\n\n  constructor(private store: Store) {\n    this.cartItems$ = this.store.select(selectCartItems);\n    this.total$ = this.store.select(selectCartTotal);\n    this.itemCount$ = this.store.select(selectCartItemCount);\n  }\n\n  ngOnInit(): void {}\n\n  increaseQuantity(item: CartItem): void {\n    this.store.dispatch(updateCartItemQuantity({\n      productId: item.productId,\n      quantity: item.quantity + 1\n    }));\n  }\n\n  decreaseQuantity(item: CartItem): void {\n    if (item.quantity > 1) {\n      this.store.dispatch(updateCartItemQuantity({\n        productId: item.productId,\n        quantity: item.quantity - 1\n      }));\n    }\n  }\n\n  removeItem(item: CartItem): void {\n    this.store.dispatch(removeFromCart({ productId: item.productId }));\n  }\n\n  clearCart(): void {\n    this.store.dispatch(clearCart());\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAASC,sBAAsB,EAAEC,cAAc,EAAEC,SAAS,QAAQ,kCAAkC;AACpG,SAASC,eAAe,EAAEC,eAAe,EAAEC,mBAAmB,QAAQ,sCAAsC;AAiF5G,IAAaC,aAAa,GAA1B,MAAaA,aAAa;EAKxBC,YAAoBC,KAAY;IAAZ,KAAAA,KAAK,GAALA,KAAK;IACvB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACD,KAAK,CAACE,MAAM,CAACP,eAAe,CAAC;IACpD,IAAI,CAACQ,MAAM,GAAG,IAAI,CAACH,KAAK,CAACE,MAAM,CAACN,eAAe,CAAC;IAChD,IAAI,CAACQ,UAAU,GAAG,IAAI,CAACJ,KAAK,CAACE,MAAM,CAACL,mBAAmB,CAAC;EAC1D;EAEAQ,QAAQA,CAAA,GAAU;EAElBC,gBAAgBA,CAACC,IAAc;IAC7B,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAAChB,sBAAsB,CAAC;MACzCiB,SAAS,EAAEF,IAAI,CAACE,SAAS;MACzBC,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;KAC3B,CAAC,CAAC;EACL;EAEAC,gBAAgBA,CAACJ,IAAc;IAC7B,IAAIA,IAAI,CAACG,QAAQ,GAAG,CAAC,EAAE;MACrB,IAAI,CAACV,KAAK,CAACQ,QAAQ,CAAChB,sBAAsB,CAAC;QACzCiB,SAAS,EAAEF,IAAI,CAACE,SAAS;QACzBC,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;OAC3B,CAAC,CAAC;;EAEP;EAEAE,UAAUA,CAACL,IAAc;IACvB,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAACf,cAAc,CAAC;MAAEgB,SAAS,EAAEF,IAAI,CAACE;IAAS,CAAE,CAAC,CAAC;EACpE;EAEAf,SAASA,CAAA;IACP,IAAI,CAACM,KAAK,CAACQ,QAAQ,CAACd,SAAS,EAAE,CAAC;EAClC;CACD;AApCYI,aAAa,GAAAe,UAAA,EA/EzBtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,uBAAuB,CAAC;EACpCC,MAAM,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyER;CACF,CAAC,C,EACWnB,aAAa,CAoCzB;SApCYA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}