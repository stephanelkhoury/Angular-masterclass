{"version":3,"file":"src_app_features_products_products_module_ts.js","mappings":"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","sources":["./src/app/features/products/components/add-review/add-review.component.ts","./src/app/features/products/components/category-menu/category-menu.component.ts","./src/app/features/products/components/product-filters/product-filters.component.ts","./src/app/features/products/components/product-grid/product-grid.component.ts","./src/app/features/products/components/product-grid/product-grid.component.html","./src/app/features/products/components/product-reviews/product-reviews.component.ts","./src/app/features/products/components/product-sort/product-sort.component.ts","./src/app/features/products/product-detail/product-detail.component.ts","./src/app/features/products/product-detail/product-detail.component.html","./src/app/features/products/products-routing.module.ts","./src/app/features/products/products.component.ts","./src/app/features/products/products.component.html","./src/app/features/products/products.module.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Review } from '../../../../core/models/product.model';\n\n@Component({\n  selector: 'app-add-review',\n  template: `\n    <div class=\"add-review-form\">\n      <h4>Write a Review</h4>\n      <form [formGroup]=\"reviewForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-field\">\n          <label>Rating</label>\n          <div class=\"star-rating-input\">\n            <button type=\"button\" \n                    *ngFor=\"let star of [1,2,3,4,5]; let i = index\"\n                    [class.active]=\"rating >= star\"\n                    (click)=\"setRating(star)\">\n              ★\n            </button>\n          </div>\n        </div>\n        \n        <div class=\"form-field\">\n          <label for=\"title\">Review Title</label>\n          <input type=\"text\" id=\"title\" formControlName=\"title\" placeholder=\"Summarize your review\">\n        </div>\n        \n        <div class=\"form-field\">\n          <label for=\"content\">Review</label>\n          <textarea id=\"content\" formControlName=\"content\" rows=\"4\" \n                   placeholder=\"Tell others about your experience with this product\"></textarea>\n        </div>\n        \n        <button type=\"submit\" [disabled]=\"reviewForm.invalid\">Submit Review</button>\n      </form>\n    </div>\n  `,\n  styles: [`\n    .add-review-form {\n      margin-top: 24px;\n      padding: 24px;\n      border: 1px solid #e0e0e0;\n      border-radius: 8px;\n    }\n    \n    .form-field {\n      margin-bottom: 16px;\n    }\n    \n    .form-field label {\n      display: block;\n      margin-bottom: 4px;\n      font-weight: 500;\n    }\n    \n    .form-field input,\n    .form-field textarea {\n      width: 100%;\n      padding: 8px;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n    }\n    \n    .star-rating-input button {\n      background: none;\n      border: none;\n      font-size: 24px;\n      color: #ddd;\n      cursor: pointer;\n      margin-right: 4px;\n    }\n    \n    .star-rating-input button.active {\n      color: #ffc107;\n    }\n    \n    button[type=\"submit\"] {\n      background-color: #3f51b5;\n      color: white;\n      padding: 12px 24px;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    \n    button[type=\"submit\"]:disabled {\n      background-color: #ccc;\n      cursor: not-allowed;\n    }\n  `]\n})\nexport class AddReviewComponent {\n  @Input() productId!: string;\n  @Output() reviewSubmitted = new EventEmitter<Review>();\n  \n  reviewForm: FormGroup;\n  rating = 0;\n  \n  constructor(private fb: FormBuilder) {\n    this.reviewForm = this.fb.group({\n      title: ['', Validators.required],\n      content: ['', [Validators.required, Validators.minLength(10)]],\n      rating: [0, [Validators.required, Validators.min(1)]]\n    });\n  }\n  \n  setRating(star: number): void {\n    this.rating = star;\n    this.reviewForm.patchValue({ rating: star });\n  }\n  \n  onSubmit(): void {\n    if (this.reviewForm.valid) {\n      const review: Review = {\n        id: '', // Will be set by the service\n        productId: this.productId,\n        userId: '', // Should come from auth service\n        userName: 'Anonymous User', // Should come from auth service\n        rating: this.reviewForm.value.rating,\n        title: this.reviewForm.value.title,\n        comment: this.reviewForm.value.content,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      };\n      \n      this.reviewSubmitted.emit(review);\n      this.reviewForm.reset();\n      this.rating = 0;\n    }\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Category } from '../../../../core/models/category.model';\n\n@Component({\n  selector: 'app-category-menu',\n  template: `\n    <div class=\"category-menu\">\n      <div class=\"category-item\" \n           [class.active]=\"!selectedCategory\"\n           (click)=\"onCategorySelect(null)\">\n        All Categories\n      </div>\n      <div class=\"category-item\" \n           *ngFor=\"let category of categories\"\n           [class.active]=\"selectedCategory === category.id\"\n           (click)=\"onCategorySelect(category.id)\">\n        {{ category.name }}\n      </div>\n    </div>\n  `,\n  styles: [`\n    .category-menu {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 8px;\n      margin-bottom: 16px;\n    }\n    \n    .category-item {\n      padding: 8px 16px;\n      border: 1px solid #ddd;\n      border-radius: 20px;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      background-color: white;\n    }\n    \n    .category-item:hover {\n      background-color: #f5f5f5;\n    }\n    \n    .category-item.active {\n      background-color: #3f51b5;\n      color: white;\n      border-color: #3f51b5;\n    }\n  `]\n})\nexport class CategoryMenuComponent {\n  @Input() categories: Category[] | null = [];\n  @Input() selectedCategory: string | null = null;\n  @Output() categorySelected = new EventEmitter<string | null>();\n\n  onCategorySelect(categoryId: string | null): void {\n    this.categorySelected.emit(categoryId);\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-product-filters',\n  template: `\n    <div class=\"filters-container\">\n      <h3>Filters</h3>\n      \n      <div class=\"filter-section\">\n        <h4>Price Range</h4>\n        <div class=\"price-inputs\">\n          <div class=\"input-group\">\n            <label for=\"min-price\">Min</label>\n            <input \n              type=\"number\" \n              id=\"min-price\" \n              [ngModel]=\"minPrice\" \n              (ngModelChange)=\"onMinPriceChange($event)\"\n              min=\"0\"\n            >\n          </div>\n          <div class=\"input-group\">\n            <label for=\"max-price\">Max</label>\n            <input \n              type=\"number\" \n              id=\"max-price\" \n              [ngModel]=\"maxPrice\" \n              (ngModelChange)=\"onMaxPriceChange($event)\"\n              min=\"0\"\n            >\n          </div>\n        </div>\n        <div class=\"price-slider\">\n          <input \n            type=\"range\" \n            [min]=\"0\" \n            [max]=\"maxPossiblePrice\" \n            [ngModel]=\"minPrice\"\n            (ngModelChange)=\"onMinPriceChange($event)\"\n            class=\"slider min-slider\"\n          >\n          <input \n            type=\"range\" \n            [min]=\"0\" \n            [max]=\"maxPossiblePrice\" \n            [ngModel]=\"maxPrice\"\n            (ngModelChange)=\"onMaxPriceChange($event)\"\n            class=\"slider max-slider\"\n          >\n        </div>\n      </div>\n      \n      <div class=\"filter-section\">\n        <h4>Rating</h4>\n        <div class=\"rating-filter\">\n          <div \n            *ngFor=\"let star of [5,4,3,2,1]\" \n            class=\"rating-option\"\n            [class.selected]=\"rating === star\"\n            (click)=\"onRatingChange(star)\"\n          >\n            <span class=\"stars\">\n              <span *ngFor=\"let i of [1,2,3,4,5]\" class=\"star\" [class.filled]=\"i <= star\">★</span>\n            </span>\n            <span class=\"rating-text\">{{ star }}+ stars</span>\n          </div>\n        </div>\n      </div>\n      \n      <button class=\"clear-filters-btn\" (click)=\"clearFilters()\">Clear All Filters</button>\n    </div>\n  `,\n  styles: [`\n    .filters-container {\n      background-color: white;\n      border-radius: 8px;\n      padding: 20px;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n    }\n    \n    h3 {\n      margin-top: 0;\n      margin-bottom: 20px;\n      font-size: 1.2rem;\n      color: #333;\n      border-bottom: 1px solid #eee;\n      padding-bottom: 10px;\n    }\n    \n    .filter-section {\n      margin-bottom: 25px;\n    }\n    \n    h4 {\n      margin-top: 0;\n      margin-bottom: 15px;\n      font-size: 1rem;\n      color: #555;\n    }\n    \n    .price-inputs {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 15px;\n    }\n    \n    .input-group {\n      width: 48%;\n    }\n    \n    label {\n      display: block;\n      margin-bottom: 5px;\n      font-size: 0.8rem;\n      color: #777;\n    }\n    \n    input[type=\"number\"] {\n      width: 100%;\n      padding: 8px;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n    }\n    \n    .price-slider {\n      position: relative;\n      height: 30px;\n    }\n    \n    .slider {\n      position: absolute;\n      width: 100%;\n      top: 0;\n      appearance: none;\n      height: 2px;\n      background: #ddd;\n      outline: none;\n    }\n    \n    .slider::-webkit-slider-thumb {\n      appearance: none;\n      width: 15px;\n      height: 15px;\n      border-radius: 50%;\n      background: #1976d2;\n      cursor: pointer;\n      z-index: 10;\n      position: relative;\n    }\n    \n    .rating-filter {\n      display: flex;\n      flex-direction: column;\n    }\n    \n    .rating-option {\n      display: flex;\n      align-items: center;\n      padding: 8px;\n      cursor: pointer;\n      border-radius: 4px;\n      margin-bottom: 5px;\n    }\n    \n    .rating-option:hover {\n      background-color: #f5f5f5;\n    }\n    \n    .rating-option.selected {\n      background-color: #e3f2fd;\n    }\n    \n    .stars {\n      margin-right: 10px;\n    }\n    \n    .star {\n      color: #ddd;\n      font-size: 1rem;\n    }\n    \n    .star.filled {\n      color: #FFD700;\n    }\n    \n    .rating-text {\n      font-size: 0.9rem;\n      color: #666;\n    }\n    \n    .clear-filters-btn {\n      width: 100%;\n      padding: 10px;\n      background-color: transparent;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      color: #666;\n      font-size: 0.9rem;\n      cursor: pointer;\n      transition: all 0.3s;\n    }\n    \n    .clear-filters-btn:hover {\n      background-color: #f5f5f5;\n      border-color: #bbb;\n    }\n  `]\n})\nexport class ProductFiltersComponent {\n  @Input() minPrice: number = 0;\n  @Input() maxPrice: number = 1000;\n  @Input() rating: number = 0;\n  \n  @Output() priceRangeChanged = new EventEmitter<{min: number, max: number}>();\n  @Output() ratingChanged = new EventEmitter<number>();\n  @Output() filtersCleared = new EventEmitter<void>();\n  \n  maxPossiblePrice = 2000;\n  \n  onMinPriceChange(value: number) {\n    const min = Math.min(value, this.maxPrice);\n    this.priceRangeChanged.emit({min, max: this.maxPrice});\n  }\n  \n  onMaxPriceChange(value: number) {\n    const max = Math.max(value, this.minPrice);\n    this.priceRangeChanged.emit({min: this.minPrice, max});\n  }\n  \n  onRatingChange(rating: number) {\n    this.ratingChanged.emit(rating);\n  }\n  \n  clearFilters() {\n    this.filtersCleared.emit();\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Product } from '../../../../core/models/product.model';\n\n@Component({\n  selector: 'app-product-grid',\n  templateUrl: './product-grid.component.html',\n  styleUrls: ['./product-grid.component.scss']\n})\nexport class ProductGridComponent {\n  @Input() products: Product[] | null = [];\n  @Input() viewMode: 'grid' | 'list' = 'grid';\n  \n  @Output() addToCart = new EventEmitter<Product>();\n  @Output() addToWishlist = new EventEmitter<Product>();\n  @Output() viewDetails = new EventEmitter<Product>();\n  \n  onAddToCart(event: { product: Product; quantity: number }): void {\n    this.addToCart.emit(event.product);\n  }\n  \n  onAddToWishlist(product: Product): void {\n    this.addToWishlist.emit(product);\n  }\n  \n  onViewDetails(product: Product): void {\n    this.viewDetails.emit(product);\n  }\n}\n","<div class=\"product-grid-container\" [class.list-view]=\"viewMode === 'list'\">\n  <ng-container *ngIf=\"products && products.length > 0; else noProducts\">\n    <div class=\"product-item\" *ngFor=\"let product of products\">\n      <app-product-card\n        [product]=\"product\"\n        (productAddedToCart)=\"onAddToCart($event)\"\n        (productAddedToWishlist)=\"onAddToWishlist(product)\"\n        (productViewed)=\"onViewDetails(product)\">\n      </app-product-card>\n    </div>\n  </ng-container>\n  \n  <ng-template #noProducts>\n    <div class=\"no-products\">\n      <mat-icon>sentiment_very_dissatisfied</mat-icon>\n      <h3>No Products Found</h3>\n      <p>We couldn't find any products matching your criteria.</p>\n    </div>\n  </ng-template>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { Review } from '../../../../core/models/product.model';\n\n@Component({\n  selector: 'app-product-reviews',\n  template: `\n    <div class=\"reviews-container\">\n      <div *ngIf=\"reviews && reviews.length > 0; else noReviews\">\n        <div class=\"reviews-summary\">\n          <div class=\"average-rating\">\n            <div class=\"rating-number\">{{ averageRating.toFixed(1) }}</div>\n            <div class=\"stars\">\n              <span class=\"filled-stars\" [style.width.%]=\"(averageRating / 5) * 100\">★★★★★</span>\n              <span class=\"empty-stars\">★★★★★</span>\n            </div>\n            <div class=\"total-reviews\">{{ reviews.length }} {{ reviews.length === 1 ? 'review' : 'reviews' }}</div>\n          </div>\n          \n          <div class=\"rating-distribution\">\n            <div class=\"rating-bar\" *ngFor=\"let star of [5,4,3,2,1]\">\n              <span class=\"rating-label\">{{ star }} stars</span>\n              <div class=\"progress-bar\">\n                <div class=\"progress\" [style.width.%]=\"getRatingPercentage(star)\"></div>\n              </div>\n              <span class=\"rating-count\">{{ getRatingCount(star) }}</span>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"reviews-list\">\n          <div class=\"review-item\" *ngFor=\"let review of reviews\">\n            <div class=\"review-header\">\n              <div class=\"reviewer-info\">\n                <img \n                  [src]=\"review.userAvatar || 'assets/images/default-avatar.png'\" \n                  [alt]=\"review.userName\"\n                  class=\"reviewer-avatar\"\n                >\n                <div>\n                  <div class=\"reviewer-name\">{{ review.userName }}</div>\n                  <div class=\"review-date\">{{ review.createdAt | date:'mediumDate' }}</div>\n                </div>\n              </div>\n              <div class=\"review-rating\">\n                <span class=\"stars\">\n                  <span class=\"filled-stars\" [style.width.%]=\"(review.rating / 5) * 100\">★★★★★</span>\n                  <span class=\"empty-stars\">★★★★★</span>\n                </span>\n              </div>\n            </div>\n            \n            <h4 class=\"review-title\">{{ review.title }}</h4>\n            <p class=\"review-content\">{{ review.comment }}</p>\n            \n            <div class=\"review-footer\">\n              <div class=\"helpful-section\">\n                <span>Was this review helpful?</span>\n                <button class=\"helpful-btn\">Yes</button>\n                <button class=\"helpful-btn\">No</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <ng-template #noReviews>\n        <div class=\"no-reviews\">\n          <p>This product has no reviews yet. Be the first to share your experience!</p>\n        </div>\n      </ng-template>\n    </div>\n  `,\n  styles: [`\n    .reviews-container {\n      margin-top: 20px;\n    }\n    \n    .reviews-summary {\n      display: flex;\n      margin-bottom: 30px;\n      padding-bottom: 20px;\n      border-bottom: 1px solid #eee;\n    }\n    \n    .average-rating {\n      flex: 0 0 200px;\n      text-align: center;\n      padding-right: 30px;\n    }\n    \n    .rating-number {\n      font-size: 3rem;\n      font-weight: bold;\n      color: #333;\n      margin-bottom: 5px;\n    }\n    \n    .stars {\n      position: relative;\n      display: inline-block;\n      color: #ddd;\n      font-size: 1.5rem;\n    }\n    \n    .filled-stars {\n      position: absolute;\n      top: 0;\n      left: 0;\n      overflow: hidden;\n      color: #FFD700;\n      white-space: nowrap;\n    }\n    \n    .total-reviews {\n      margin-top: 5px;\n      color: #777;\n      font-size: 0.9rem;\n    }\n    \n    .rating-distribution {\n      flex: 1;\n    }\n    \n    .rating-bar {\n      display: flex;\n      align-items: center;\n      margin-bottom: 8px;\n    }\n    \n    .rating-label {\n      flex: 0 0 60px;\n      font-size: 0.9rem;\n      color: #666;\n    }\n    \n    .progress-bar {\n      flex: 1;\n      height: 10px;\n      background-color: #eee;\n      border-radius: 5px;\n      overflow: hidden;\n      margin: 0 10px;\n    }\n    \n    .progress {\n      height: 100%;\n      background-color: #1976d2;\n    }\n    \n    .rating-count {\n      flex: 0 0 30px;\n      font-size: 0.9rem;\n      color: #666;\n      text-align: right;\n    }\n    \n    .reviews-list {\n      margin-top: 20px;\n    }\n    \n    .review-item {\n      padding: 20px 0;\n      border-bottom: 1px solid #eee;\n    }\n    \n    .review-header {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 15px;\n    }\n    \n    .reviewer-info {\n      display: flex;\n      align-items: center;\n    }\n    \n    .reviewer-avatar {\n      width: 40px;\n      height: 40px;\n      border-radius: 50%;\n      margin-right: 10px;\n      object-fit: cover;\n    }\n    \n    .reviewer-name {\n      font-weight: 500;\n      color: #333;\n    }\n    \n    .review-date {\n      font-size: 0.8rem;\n      color: #999;\n    }\n    \n    .review-title {\n      margin: 0 0 10px 0;\n      font-size: 1.1rem;\n      color: #333;\n    }\n    \n    .review-content {\n      color: #555;\n      line-height: 1.5;\n      margin-bottom: 15px;\n    }\n    \n    .review-footer {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      font-size: 0.9rem;\n    }\n    \n    .verified-badge {\n      color: #4CAF50;\n      font-weight: 500;\n    }\n    \n    .helpful-section {\n      color: #777;\n    }\n    \n    .helpful-btn {\n      background: none;\n      border: 1px solid #ddd;\n      border-radius: 3px;\n      padding: 3px 8px;\n      margin-left: 10px;\n      cursor: pointer;\n      color: #555;\n      font-size: 0.8rem;\n    }\n    \n    .helpful-btn:hover {\n      background-color: #f5f5f5;\n    }\n    \n    .no-reviews {\n      text-align: center;\n      padding: 40px 0;\n      color: #777;\n    }\n  `]\n})\nexport class ProductReviewsComponent {\n  @Input() reviews: Review[] = [];\n  \n  get averageRating(): number {\n    if (!this.reviews || this.reviews.length === 0) return 0;\n    const sum = this.reviews.reduce((total, review) => total + review.rating, 0);\n    return sum / this.reviews.length;\n  }\n  \n  getRatingCount(stars: number): number {\n    if (!this.reviews) return 0;\n    return this.reviews.filter(review => review.rating === stars).length;\n  }\n  \n  getRatingPercentage(stars: number): number {\n    if (!this.reviews || this.reviews.length === 0) return 0;\n    return (this.getRatingCount(stars) / this.reviews.length) * 100;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-product-sort',\n  template: `\n    <div class=\"sort-container\">\n      <label for=\"sort-select\">Sort By:</label>\n      <select \n        id=\"sort-select\" \n        [ngModel]=\"currentSort\" \n        (ngModelChange)=\"onSortChange($event)\"\n      >\n        <option value=\"featured\">Featured</option>\n        <option value=\"price-low-high\">Price: Low to High</option>\n        <option value=\"price-high-low\">Price: High to Low</option>\n        <option value=\"name-a-z\">Name: A to Z</option>\n        <option value=\"name-z-a\">Name: Z to A</option>\n        <option value=\"newest\">Newest First</option>\n        <option value=\"rating\">Top Rated</option>\n        <option value=\"popular\">Most Popular</option>\n      </select>\n    </div>\n  `,\n  styles: [`\n    .sort-container {\n      display: flex;\n      align-items: center;\n    }\n    \n    label {\n      margin-right: 10px;\n      font-size: 0.9rem;\n      color: #666;\n    }\n    \n    select {\n      padding: 8px 30px 8px 10px;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      background-color: white;\n      appearance: none;\n      background-image: url(\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e\");\n      background-repeat: no-repeat;\n      background-position: right 10px center;\n      background-size: 1em;\n    }\n    \n    select:focus {\n      outline: none;\n      border-color: #1976d2;\n    }\n  `]\n})\nexport class ProductSortComponent {\n  @Input() currentSort: string = 'featured';\n  @Output() sortChanged = new EventEmitter<string>();\n  \n  onSortChange(value: string) {\n    this.sortChanged.emit(value);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, tap, catchError } from 'rxjs/operators';\n\nimport { AppState } from '../../../store';\nimport { Product, Review } from '../../../core/models/product.model';\nimport { ProductService } from '../../../core/services/product.service';\nimport { CartService } from '../../../core/services/cart.service';\nimport { NotificationService } from '../../../core/services/notification.service';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.scss']\n})\nexport class ProductDetailComponent implements OnInit {\n  product$: Observable<Product | null>;\n  relatedProducts$: Observable<Product[]>;\n  loading$: Observable<boolean>;\n  error: string | null = null;\n  \n  selectedImage: string | null = null;\n  quantity = 1;\n  \n  constructor(\n    private store: Store<AppState>,\n    private route: ActivatedRoute,\n    private router: Router,\n    private productService: ProductService,\n    private cartService: CartService,\n    private notificationService: NotificationService\n  ) {\n    this.loading$ = this.store.select(state => state.ui.loading);\n    \n    // Get product from store based on route param\n    this.product$ = this.route.paramMap.pipe(\n      map(params => params.get('id')),\n      switchMap(id => {\n        if (!id) {\n          return of(null);\n        }\n        \n        return this.store.select(state => \n          state.products.items.find((product: Product) => product.id === id) || null\n        ).pipe(\n          tap(product => {\n            if (!product) {\n              // If product not in store, load it\n              this.productService.loadProductById(id);\n            } else {\n              // Set selected image\n              this.selectedImage = product.imageUrl;\n            }\n          })\n        );\n      }),\n      catchError(err => {\n        this.error = 'Failed to load product details';\n        return of(null);\n      })\n    );\n    \n    // Get related products\n    this.relatedProducts$ = this.product$.pipe(\n      switchMap(product => {\n        if (!product) {\n          return of([]);\n        }\n        \n        return this.store.select(state => \n          state.products.items\n            .filter((p: Product) => p.category?.id === product.category?.id && p.id !== product.id)\n            .slice(0, 4)\n        );\n      })\n    );\n  }\n  \n  ngOnInit(): void {\n    // Ensure all products are loaded\n    this.productService.loadProducts();\n  }\n  \n  updateSelectedImage(imageUrl: string | null): void {\n    this.selectedImage = imageUrl;\n  }\n  \n  incrementQuantity(): void {\n    this.quantity++;\n  }\n  \n  decrementQuantity(): void {\n    if (this.quantity > 1) {\n      this.quantity--;\n    }\n  }\n  \n  addToCart(event: { product: Product; quantity: number } | Product): void {\n    const product = 'product' in event ? event.product : event;\n    const quantity = 'quantity' in event ? event.quantity : this.quantity;\n    this.cartService.addToCart(product, quantity);\n    this.notificationService.show(`${product.name} added to cart`);\n  }\n  \n  addToWishlist(product: Product): void {\n    // This would dispatch the appropriate action for the wishlist\n    this.notificationService.show(`${product.name} added to wishlist`);\n  }\n  \n  submitReview(product: Product, review: Review): void {\n    // Extract only the required properties for the addProductReview method\n    const reviewData = {\n      rating: review.rating,\n      title: review.title || '', // Ensure title is provided even if it's optional in the Review interface\n      comment: review.comment\n    };\n    this.productService.addProductReview(product.id, reviewData);\n    this.notificationService.show('Thank you for your review!');\n  }\n  \n  goBack(): void {\n    this.router.navigate(['/products']);\n  }\n}\n","<div class=\"product-detail-page\">\n  <!-- Loading Spinner -->\n  <app-loading-spinner *ngIf=\"loading$ | async\" [overlay]=\"true\"></app-loading-spinner>\n  \n  <div class=\"container\">\n    <!-- Back Button -->\n    <button mat-stroked-button class=\"back-button\" (click)=\"goBack()\">\n      <mat-icon>arrow_back</mat-icon>\n      Back to Products\n    </button>\n    \n    <!-- Error Message -->\n    <div *ngIf=\"error\" class=\"error-message\">\n      <mat-icon>error_outline</mat-icon>\n      <p>{{error}}</p>\n      <button mat-raised-button color=\"primary\" (click)=\"goBack()\">Go Back</button>\n    </div>\n    \n    <ng-container *ngIf=\"(product$ | async) as product; else notFound\">\n      <div class=\"product-detail\">\n        <!-- Product Images -->\n        <div class=\"product-images\">\n          <div class=\"main-image\">\n            <img [src]=\"selectedImage || product.imageUrl\" [alt]=\"product.name\">\n          </div>\n          \n          <div class=\"image-gallery\">\n            <div class=\"image-thumbnail\" \n                 [class.active]=\"selectedImage === product.imageUrl\" \n                 (click)=\"updateSelectedImage(product.imageUrl)\">\n              <img [src]=\"product.imageUrl\" [alt]=\"product.name + ' main image'\">\n            </div>\n            \n            <ng-container *ngIf=\"product.additionalImages && product.additionalImages.length > 0\">\n              <div class=\"image-thumbnail\" \n                   *ngFor=\"let image of product.additionalImages\" \n                   [class.active]=\"selectedImage === image\"\n                   (click)=\"updateSelectedImage(image)\">\n                <img [src]=\"image\" [alt]=\"product.name + ' additional image'\">\n              </div>\n            </ng-container>\n          </div>\n        </div>\n        \n        <!-- Product Info -->\n        <div class=\"product-info\">\n          <div class=\"product-category\" *ngIf=\"product.category\">{{product.category.name}}</div>\n          <h1 class=\"product-name\">{{product.name}}</h1>\n          \n          <div class=\"product-rating\">\n            <app-star-rating [rating]=\"product.rating || 0\" [reviewCount]=\"product.reviews?.length || 0\"></app-star-rating>\n          </div>\n          \n          <div class=\"product-price\">\n            <span class=\"current-price\">{{product.price | price}}</span>\n            <span class=\"regular-price\" *ngIf=\"product.regularPrice && product.regularPrice > product.price\">\n              {{product.regularPrice | price}}\n            </span>\n            \n            <span class=\"discount-badge\" *ngIf=\"product.regularPrice && product.regularPrice > product.price\">\n              {{((product.regularPrice - product.price) / product.regularPrice * 100) | number:'1.0-0'}}% OFF\n            </span>\n          </div>\n          \n          <div class=\"product-availability\" [class.out-of-stock]=\"(product.stockQuantity || 0) === 0\">\n            <mat-icon>{{(product.stockQuantity || 0) > 0 ? 'check_circle' : 'cancel'}}</mat-icon>\n            <span>{{(product.stockQuantity || 0) > 0 ? 'In Stock' : 'Out of Stock'}}</span>\n            <span *ngIf=\"(product.stockQuantity || 0) > 0 && (product.stockQuantity || 0) < 10\" class=\"low-stock\">\n              (Only {{product.stockQuantity}} left)\n            </span>\n          </div>\n          \n          <p class=\"product-description\">{{product.description}}</p>\n          \n          <!-- Product Actions -->\n          <div class=\"product-actions\">\n            <div class=\"quantity-selector\">\n              <button mat-icon-button color=\"primary\" (click)=\"decrementQuantity()\" [disabled]=\"quantity <= 1\">\n                <mat-icon>remove</mat-icon>\n              </button>\n              <span>{{quantity}}</span>\n              <button mat-icon-button color=\"primary\" (click)=\"incrementQuantity()\">\n                <mat-icon>add</mat-icon>\n              </button>\n            </div>\n            \n            <button mat-raised-button color=\"primary\" class=\"add-to-cart-btn\"\n                   [disabled]=\"product.stockQuantity === 0\"\n                   (click)=\"addToCart(product)\">\n              <mat-icon>shopping_cart</mat-icon>\n              Add to Cart\n            </button>\n            \n            <button mat-icon-button class=\"wishlist-btn\" (click)=\"addToWishlist(product)\">\n              <mat-icon>favorite_border</mat-icon>\n            </button>\n          </div>\n          \n          <!-- Product Details -->\n          <mat-divider></mat-divider>\n          \n          <div class=\"product-details\">\n            <h3>Product Details</h3>\n            <div class=\"details-grid\">\n              <div class=\"detail-item\">\n                <span class=\"detail-label\">SKU</span>\n                <span class=\"detail-value\">{{product.sku || 'N/A'}}</span>\n              </div>\n              \n              <div class=\"detail-item\">\n                <span class=\"detail-label\">Brand</span>\n                <span class=\"detail-value\">{{product.brand || 'N/A'}}</span>\n              </div>\n              \n              <div *ngIf=\"product.specifications\" class=\"detail-item\">\n                <span class=\"detail-label\">Weight</span>\n                <span class=\"detail-value\">{{product.specifications['weight'] || 'N/A'}}</span>\n              </div>\n              \n              <div *ngIf=\"product.specifications\" class=\"detail-item\">\n                <span class=\"detail-label\">Dimensions</span>\n                <span class=\"detail-value\">{{product.specifications['dimensions'] || 'N/A'}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Product Tabs -->\n      <mat-tab-group class=\"product-tabs\">\n        <mat-tab label=\"Description\">\n          <div class=\"tab-content\">\n            <h3>Product Description</h3>\n            <div [innerHTML]=\"product.longDescription || product.description\"></div>\n          </div>\n        </mat-tab>\n        \n        <mat-tab label=\"Specifications\" *ngIf=\"product.specifications\">\n          <div class=\"tab-content\">\n            <h3>Product Specifications</h3>\n            <table class=\"specs-table\">\n              <tr *ngFor=\"let spec of (product.specifications || {}) | keyvalue\">\n                <th>{{spec.key.toString() | titlecase}}</th>\n                <td>{{spec.value}}</td>\n              </tr>\n            </table>\n          </div>\n        </mat-tab>\n        \n        <mat-tab label=\"Reviews ({{product.reviews?.length || 0}})\">\n          <div class=\"tab-content\">\n            <h3>Customer Reviews</h3>\n            <app-product-reviews [reviews]=\"product.reviews || []\"></app-product-reviews>\n            \n            <h4>Add a Review</h4>\n            <app-add-review [productId]=\"product.id\" (reviewSubmitted)=\"submitReview(product, $any($event))\"></app-add-review>\n          </div>\n        </mat-tab>\n      </mat-tab-group>\n      \n      <!-- Related Products -->\n      <section class=\"related-products\" *ngIf=\"(relatedProducts$ | async)?.length\">\n        <h2>Related Products</h2>\n        <div class=\"related-grid\">\n          <app-product-card \n            *ngFor=\"let relatedProduct of (relatedProducts$ | async)\" \n            [product]=\"relatedProduct\"\n            (productAddedToCart)=\"addToCart($event)\"\n            (productAddedToWishlist)=\"addToWishlist(relatedProduct)\"\n            (productViewed)=\"updateSelectedImage(null)\">\n          </app-product-card>\n        </div>\n      </section>\n    </ng-container>\n    \n    <ng-template #notFound>\n      <app-not-found *ngIf=\"!(loading$ | async) && !error\"></app-not-found>\n    </ng-template>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductsComponent } from './products.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductsComponent\n  },\n  {\n    path: ':id',\n    component: ProductDetailComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductsRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subject, combineLatest } from 'rxjs';\nimport { takeUntil, debounceTime, map } from 'rxjs/operators';\n\nimport { AppState } from '../../store';\nimport { Product, Category } from '../../core/models/product.model';\nimport { ProductService } from '../../core/services/product.service';\nimport { CartService } from '../../core/services/cart.service';\nimport { NotificationService } from '../../core/services/notification.service';\n\ninterface ProductFilters {\n  [key: string]: string | number | undefined;\n  category?: string;\n  minPrice?: number;\n  maxPrice?: number;\n  rating?: number;\n  sort?: string;\n  search?: string;\n}\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit, OnDestroy {\n  products$: Observable<Product[]>;\n  categories$: Observable<Category[]>;\n  filteredProducts$: Observable<Product[]>;\n  loading$: Observable<boolean>;\n  \n  filters: ProductFilters = {};\n  searchControl = new FormControl('');\n  \n  viewMode: 'grid' | 'list' = 'grid';\n  \n  private destroy$ = new Subject<void>();\n  \n  constructor(\n    private store: Store<AppState>,\n    private route: ActivatedRoute,\n    private router: Router,\n    private productService: ProductService,\n    private cartService: CartService,\n    private notificationService: NotificationService\n  ) {\n    this.products$ = this.store.select(state => state.products.items);\n    this.categories$ = this.store.select(state => state.products.categories);\n    this.loading$ = this.store.select(state => state.ui.loading);\n    \n    // Create filtered products stream\n    this.filteredProducts$ = combineLatest([\n      this.products$,\n      this.route.queryParams.pipe(map(params => {\n        const filters: ProductFilters = {};\n        \n        if (params['category']) filters.category = params['category'];\n        if (params['minPrice']) filters.minPrice = Number(params['minPrice']);\n        if (params['maxPrice']) filters.maxPrice = Number(params['maxPrice']);\n        if (params['rating']) filters.rating = Number(params['rating']);\n        if (params['sort']) filters.sort = params['sort'];\n        if (params['search']) {\n          filters.search = params['search'];\n          this.searchControl.setValue(params['search']);\n        }\n        \n        this.filters = filters;\n        return filters;\n      }))\n    ]).pipe(\n      map(([products, filters]) => this.filterProducts(products, filters))\n    );\n  }\n  \n  ngOnInit(): void {\n    // Load products and categories\n    this.productService.loadProducts();\n    this.productService.loadCategories();\n    \n    // Handle search input with debounce\n    this.searchControl.valueChanges.pipe(\n      debounceTime(300),\n      takeUntil(this.destroy$)\n    ).subscribe(value => {\n      this.updateFilters({ search: value || undefined });\n    });\n  }\n  \n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  \n  onCategoryChange(categoryId: string | null): void {\n    this.updateFilters({ category: categoryId || undefined });\n  }\n  \n  onPriceRangeChange(priceRange: { min: number, max: number }): void {\n    this.updateFilters({\n      minPrice: priceRange.min,\n      maxPrice: priceRange.max\n    });\n  }\n  \n  onRatingChange(rating: number | null): void {\n    this.updateFilters({ rating: rating || undefined });\n  }\n  \n  onSortChange(sort: string): void {\n    this.updateFilters({ sort });\n  }\n  \n  onViewModeChange(mode: 'grid' | 'list'): void {\n    this.viewMode = mode;\n  }\n  \n  onAddToCart(product: Product): void {\n    this.cartService.addToCart(product);\n    this.notificationService.show(`${product.name} added to cart`);\n  }\n  \n  onAddToWishlist(product: Product): void {\n    // This would dispatch the appropriate action for the wishlist\n    this.notificationService.show(`${product.name} added to wishlist`);\n  }\n  \n  onViewDetails(product: Product): void {\n    this.router.navigate(['/products', product.id]);\n  }\n  \n  resetFilters(): void {\n    this.searchControl.setValue('');\n    this.updateFilters({\n      category: undefined,\n      minPrice: undefined,\n      maxPrice: undefined,\n      rating: undefined,\n      sort: undefined,\n      search: undefined\n    });\n  }\n  \n  private updateFilters(newFilters: Partial<ProductFilters>): void {\n    const updatedFilters = { ...this.filters, ...newFilters };\n    \n    // Remove undefined values\n    Object.keys(updatedFilters).forEach(key => {\n      if (updatedFilters[key] === undefined) {\n        delete updatedFilters[key];\n      }\n    });\n    \n    // Navigate with new query params\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { ...updatedFilters },\n      queryParamsHandling: 'merge'\n    });\n  }\n  \n  private filterProducts(products: Product[], filters: ProductFilters): Product[] {\n    if (!filters || Object.keys(filters).length === 0) {\n      return products;\n    }\n    \n    let filtered = [...products];\n    \n    // Filter by category\n    if (filters.category) {\n      filtered = filtered.filter(product => product.category?.id === filters.category);\n    }\n    \n    // Filter by price range\n    if (filters.minPrice !== undefined) {\n      filtered = filtered.filter(product => product.price >= filters.minPrice!);\n    }\n    \n    if (filters.maxPrice !== undefined) {\n      filtered = filtered.filter(product => product.price <= filters.maxPrice!);\n    }\n    \n    // Filter by rating\n    if (filters.rating !== undefined) {\n      filtered = filtered.filter(product => (product.rating || 0) >= filters.rating!);\n    }\n    \n    // Filter by search term\n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase();\n      filtered = filtered.filter(product => \n        product.name.toLowerCase().includes(searchTerm) || \n        product.description.toLowerCase().includes(searchTerm) ||\n        product.category?.name.toLowerCase().includes(searchTerm)\n      );\n    }\n    \n    // Sort products\n    if (filters.sort) {\n      switch (filters.sort) {\n        case 'price-low':\n          filtered.sort((a, b) => a.price - b.price);\n          break;\n        case 'price-high':\n          filtered.sort((a, b) => b.price - a.price);\n          break;\n        case 'rating':\n          filtered.sort((a, b) => (b.rating || 0) - (a.rating || 0));\n          break;\n        case 'newest':\n          filtered.sort((a, b) => {\n            const dateA = a.createdAt ? new Date(a.createdAt).getTime() : 0;\n            const dateB = b.createdAt ? new Date(b.createdAt).getTime() : 0;\n            return dateB - dateA;\n          });\n          break;\n        case 'popularity':\n          filtered.sort((a, b) => (b.reviews?.length || 0) - (a.reviews?.length || 0));\n          break;\n      }\n    }\n    \n    return filtered;\n  }\n}\n","<div class=\"products-page\">\n  <!-- Loading Spinner -->\n  <app-loading-spinner *ngIf=\"loading$ | async\" [overlay]=\"true\"></app-loading-spinner>\n  \n  <div class=\"container\">\n    <!-- Page Header -->\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">Shop Products</h1>\n      \n      <!-- Search Bar -->\n      <div class=\"search-container\">\n        <mat-form-field appearance=\"outline\" class=\"search-field\">\n          <mat-label>Search products</mat-label>\n          <input matInput [formControl]=\"searchControl\" placeholder=\"Search by name, category or description\">\n          <button *ngIf=\"searchControl.value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"searchControl.setValue('')\">\n            <mat-icon>close</mat-icon>\n          </button>\n          <mat-icon matSuffix>search</mat-icon>\n        </mat-form-field>\n      </div>\n    </div>\n    \n    <div class=\"products-layout\">\n      <!-- Sidebar / Filters -->\n      <aside class=\"filters-sidebar\">\n        <!-- Category Menu -->\n        <app-category-menu \n          [categories]=\"categories$ | async\" \n          [selectedCategory]=\"filters.category || null\"\n          (categorySelected)=\"onCategoryChange($any($event))\">>\n        </app-category-menu>\n        \n        <!-- Product Filters -->\n        <app-product-filters\n          [minPrice]=\"filters.minPrice || 0\"\n          [maxPrice]=\"filters.maxPrice || 1000\"\n          [rating]=\"filters.rating || 0\"\n          (priceRangeChanged)=\"onPriceRangeChange($event)\"\n          (ratingChanged)=\"onRatingChange($event)\">\n        </app-product-filters>\n        \n        <!-- Reset Filters Button -->\n        <div class=\"reset-filters\">\n          <button mat-stroked-button color=\"primary\" (click)=\"resetFilters()\">\n            <mat-icon>refresh</mat-icon>\n            Reset Filters\n          </button>\n        </div>\n      </aside>\n      \n      <!-- Products Content -->\n      <div class=\"products-content\">\n        <!-- Toolbar with sort and view options -->\n        <div class=\"products-toolbar\">\n          <app-product-sort \n            [currentSort]=\"filters.sort || 'name'\"\n            (sortChanged)=\"onSortChange($event)\">\n          </app-product-sort>\n          \n          <div class=\"view-options\">\n            <button mat-icon-button [class.active]=\"viewMode === 'grid'\" (click)=\"onViewModeChange('grid')\">\n              <mat-icon>grid_view</mat-icon>\n            </button>\n            <button mat-icon-button [class.active]=\"viewMode === 'list'\" (click)=\"onViewModeChange('list')\">\n              <mat-icon>view_list</mat-icon>\n            </button>\n          </div>\n        </div>\n        \n        <!-- Products Grid -->\n        <app-product-grid\n          [products]=\"filteredProducts$ | async\"\n          [viewMode]=\"viewMode\"\n          (addToCart)=\"onAddToCart($event)\"\n          (addToWishlist)=\"onAddToWishlist($event)\"\n          (viewDetails)=\"onViewDetails($event)\">\n        </app-product-grid>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { ProductsRoutingModule } from './products-routing.module';\nimport { ProductsComponent } from './products.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\nimport { ProductFiltersComponent } from './components/product-filters/product-filters.component';\nimport { ProductSortComponent } from './components/product-sort/product-sort.component';\nimport { ProductGridComponent } from './components/product-grid/product-grid.component';\nimport { ProductReviewsComponent } from './components/product-reviews/product-reviews.component';\nimport { AddReviewComponent } from './components/add-review/add-review.component';\nimport { CategoryMenuComponent } from './components/category-menu/category-menu.component';\n\n@NgModule({\n  declarations: [\n    ProductsComponent,\n    ProductDetailComponent,\n    ProductFiltersComponent,\n    ProductSortComponent,\n    ProductGridComponent,\n    ProductReviewsComponent,\n    AddReviewComponent,\n    CategoryMenuComponent\n  ],\n  imports: [\n    SharedModule,\n    ProductsRoutingModule\n  ]\n})\nexport class ProductsModule { }\n"],"names":["EventEmitter","Validators","i0","ɵɵelementStart","ɵɵlistener","AddReviewComponent_button_8_Template_button_click_0_listener","restoredCtx","ɵɵrestoreView","_r4","star_r1","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","setRating","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","ctx_r0","rating","AddReviewComponent","constructor","fb","reviewSubmitted","reviewForm","group","title","required","content","minLength","min","star","patchValue","onSubmit","valid","review","id","productId","userId","userName","value","comment","createdAt","Date","updatedAt","emit","reset","ɵɵdirectiveInject","i1","FormBuilder","selectors","inputs","outputs","decls","vars","consts","template","AddReviewComponent_Template","rf","ctx","AddReviewComponent_Template_form_ngSubmit_3_listener","ɵɵtemplate","AddReviewComponent_button_8_Template","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","invalid","CategoryMenuComponent_div_3_Template_div_click_0_listener","_r3","category_r1","ctx_r2","onCategorySelect","selectedCategory","ɵɵtextInterpolate1","name","CategoryMenuComponent","categories","categorySelected","categoryId","CategoryMenuComponent_Template","CategoryMenuComponent_Template_div_click_1_listener","CategoryMenuComponent_div_3_Template","i_r3","ProductFiltersComponent_div_22_Template_div_click_0_listener","_r6","ctx_r5","onRatingChange","ProductFiltersComponent_div_22_span_2_Template","ProductFiltersComponent","minPrice","maxPrice","priceRangeChanged","ratingChanged","filtersCleared","maxPossiblePrice","onMinPriceChange","Math","max","onMaxPriceChange","clearFilters","ProductFiltersComponent_Template","ProductFiltersComponent_Template_input_ngModelChange_10_listener","$event","ProductFiltersComponent_Template_input_ngModelChange_14_listener","ProductFiltersComponent_Template_input_ngModelChange_16_listener","ProductFiltersComponent_Template_input_ngModelChange_17_listener","ProductFiltersComponent_div_22_Template","ProductFiltersComponent_Template_button_click_23_listener","_c1","ProductGridComponent_ng_container_1_div_1_Template_app_product_card_productAddedToCart_1_listener","onAddToCart","ProductGridComponent_ng_container_1_div_1_Template_app_product_card_productAddedToWishlist_1_listener","product_r4","ctx_r7","onAddToWishlist","ProductGridComponent_ng_container_1_div_1_Template_app_product_card_productViewed_1_listener","ctx_r8","onViewDetails","ɵɵelementContainerStart","ProductGridComponent_ng_container_1_div_1_Template","ɵɵelementContainerEnd","products","ProductGridComponent","viewMode","addToCart","addToWishlist","viewDetails","event","product","ProductGridComponent_Template","ProductGridComponent_ng_container_1_Template","ProductGridComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","length","_r1","star_r5","ɵɵstyleProp","getRatingPercentage","ɵɵtextInterpolate","getRatingCount","review_r6","userAvatar","ɵɵsanitizeUrl","ɵɵpipeBind2","ProductReviewsComponent_div_1_div_13_Template","ProductReviewsComponent_div_1_div_15_Template","averageRating","toFixed","ɵɵtextInterpolate2","reviews","ProductReviewsComponent","sum","reduce","total","stars","filter","ProductReviewsComponent_Template","ProductReviewsComponent_div_1_Template","ProductReviewsComponent_ng_template_2_Template","ProductSortComponent","currentSort","sortChanged","onSortChange","ProductSortComponent_Template","ProductSortComponent_Template_select_ngModelChange_3_listener","of","map","switchMap","tap","catchError","ProductDetailComponent_div_8_Template_button_click_5_listener","goBack","ctx_r1","error","ProductDetailComponent_ng_container_9_ng_container_8_div_1_Template_div_click_0_listener","_r20","image_r18","ctx_r19","updateSelectedImage","ctx_r17","selectedImage","product_r7","ProductDetailComponent_ng_container_9_ng_container_8_div_1_Template","additionalImages","category","ɵɵpipeBind1","regularPrice","price","stockQuantity","specifications","spec_r30","key","toString","ProductDetailComponent_ng_container_9_mat_tab_69_tr_5_Template","ProductDetailComponent_ng_container_9_section_78_app_product_card_4_Template_app_product_card_productAddedToCart_0_listener","_r35","ctx_r34","ProductDetailComponent_ng_container_9_section_78_app_product_card_4_Template_app_product_card_productAddedToWishlist_0_listener","relatedProduct_r33","ctx_r36","ProductDetailComponent_ng_container_9_section_78_app_product_card_4_Template_app_product_card_productViewed_0_listener","ctx_r37","ProductDetailComponent_ng_container_9_section_78_app_product_card_4_Template","ctx_r16","relatedProducts$","ProductDetailComponent_ng_container_9_Template_div_click_6_listener","_r39","ngIf","ctx_r38","imageUrl","ProductDetailComponent_ng_container_9_ng_container_8_Template","ProductDetailComponent_ng_container_9_div_10_Template","ProductDetailComponent_ng_container_9_span_19_Template","ProductDetailComponent_ng_container_9_span_20_Template","ProductDetailComponent_ng_container_9_span_26_Template","ProductDetailComponent_ng_container_9_Template_button_click_31_listener","ctx_r40","decrementQuantity","ProductDetailComponent_ng_container_9_Template_button_click_36_listener","ctx_r41","incrementQuantity","ProductDetailComponent_ng_container_9_Template_button_click_39_listener","ctx_r42","ProductDetailComponent_ng_container_9_Template_button_click_43_listener","ctx_r43","ProductDetailComponent_ng_container_9_div_61_Template","ProductDetailComponent_ng_container_9_div_62_Template","ProductDetailComponent_ng_container_9_mat_tab_69_Template","ProductDetailComponent_ng_container_9_Template_app_add_review_reviewSubmitted_77_listener","ctx_r44","submitReview","ProductDetailComponent_ng_container_9_section_78_Template","description","quantity","sku","brand","longDescription","ɵɵsanitizeHtml","ɵɵpropertyInterpolate1","tmp_30_0","ProductDetailComponent_ng_template_11_app_not_found_0_Template","ctx_r4","loading$","ProductDetailComponent","store","route","router","productService","cartService","notificationService","select","state","ui","loading","product$","paramMap","pipe","params","get","items","find","loadProductById","err","p","slice","ngOnInit","loadProducts","show","reviewData","addProductReview","navigate","Store","i2","ActivatedRoute","Router","i3","ProductService","i4","CartService","i5","NotificationService","ProductDetailComponent_Template","ProductDetailComponent_app_loading_spinner_1_Template","ProductDetailComponent_Template_button_click_4_listener","ProductDetailComponent_div_8_Template","ProductDetailComponent_ng_container_9_Template","ProductDetailComponent_ng_template_11_Template","RouterModule","ProductsComponent","routes","path","component","ProductsRoutingModule","forChild","imports","exports","FormControl","Subject","combineLatest","takeUntil","debounceTime","ProductsComponent_button_12_Template_button_click_0_listener","searchControl","setValue","filters","destroy$","products$","categories$","filteredProducts$","queryParams","Number","sort","search","filterProducts","loadCategories","valueChanges","subscribe","updateFilters","undefined","ngOnDestroy","next","complete","onCategoryChange","onPriceRangeChange","priceRange","onViewModeChange","mode","resetFilters","newFilters","updatedFilters","Object","keys","forEach","relativeTo","queryParamsHandling","filtered","searchTerm","toLowerCase","includes","a","b","dateA","getTime","dateB","ProductsComponent_Template","ProductsComponent_app_loading_spinner_1_Template","ProductsComponent_button_12_Template","ProductsComponent_Template_app_category_menu_categorySelected_17_listener","ProductsComponent_Template_app_product_filters_priceRangeChanged_20_listener","ProductsComponent_Template_app_product_filters_ratingChanged_20_listener","ProductsComponent_Template_button_click_22_listener","ProductsComponent_Template_app_product_sort_sortChanged_28_listener","ProductsComponent_Template_button_click_30_listener","ProductsComponent_Template_button_click_33_listener","ProductsComponent_Template_app_product_grid_addToCart_36_listener","ProductsComponent_Template_app_product_grid_addToWishlist_36_listener","ProductsComponent_Template_app_product_grid_viewDetails_36_listener","SharedModule","ProductsModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}