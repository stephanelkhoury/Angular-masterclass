{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../services/auth.service\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.loginError, \" \");\n  }\n}\nclass LoginComponent {\n  constructor(fb, router, authService) {\n    this.fb = fb;\n    this.router = router;\n    this.authService = authService;\n    this.loginError = '';\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    const {\n      email,\n      password\n    } = this.loginForm.value;\n    if (this.authService.login(email, password)) {\n      // Get the redirect URL from the auth service\n      const redirectUrl = this.authService.redirectUrl || '/';\n      // Reset the redirect URL\n      this.authService.redirectUrl = null;\n      // Navigate to the redirect URL\n      this.router.navigate([redirectUrl]);\n    } else {\n      this.loginError = 'Invalid email or password';\n    }\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 30,\n      vars: 5,\n      consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\", \"offset-md-3\", \"col-lg-4\", \"offset-lg-4\"], [1, \"card\", \"mt-5\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"mb-0\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"admin@example.com\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"password\", 1, \"form-control\"], [\"role\", \"alert\", 1, \"alert\", \"alert-info\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"alert alert-danger mt-3\", 4, \"ngIf\"], [1, \"text-danger\"], [1, \"alert\", \"alert-danger\", \"mt-3\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n          i0.ɵɵtext(6, \"Login\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(9, \"div\", 8)(10, \"label\", 9);\n          i0.ɵɵtext(11, \"Email address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 10);\n          i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 2, 0, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 12);\n          i0.ɵɵtext(16, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 13);\n          i0.ɵɵtemplate(18, LoginComponent_div_18_Template, 2, 0, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 14)(20, \"strong\");\n          i0.ɵɵtext(21, \"Demo Credentials:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"br\");\n          i0.ɵɵtext(23, \" Email: admin@example.com\");\n          i0.ɵɵelement(24, \"br\");\n          i0.ɵɵtext(25, \" Password: password \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"div\", 15)(27, \"button\", 16);\n          i0.ɵɵtext(28, \" Login \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(29, LoginComponent_div_29_Template, 2, 1, \"div\", 17);\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.loginError);\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n    });\n  }\n}\nexport { LoginComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r2","loginError","LoginComponent","constructor","fb","router","authService","ngOnInit","initForm","loginForm","group","email","required","password","onSubmit","invalid","value","login","redirectUrl","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","AuthService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_8_listener","ɵɵelement","ɵɵtemplate","LoginComponent_div_13_Template","LoginComponent_div_18_Template","LoginComponent_div_29_Template","ɵɵproperty","tmp_1_0","get","touched","tmp_2_0"],"sources":["/Users/stephanelkhoury/Documents/GitHub/Angular-masterclass/10-Angular-Routing/code-examples/src/app/components/auth/login/login.component.ts","/Users/stephanelkhoury/Documents/GitHub/Angular-masterclass/10-Angular-Routing/code-examples/src/app/components/auth/login/login.component.html"],"sourcesContent":["// components/auth/login/login.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  loginError: string = '';\n  \n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n  \n  ngOnInit(): void {\n    this.initForm();\n  }\n  \n  initForm(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  \n  onSubmit(): void {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    \n    const { email, password } = this.loginForm.value;\n    \n    if (this.authService.login(email, password)) {\n      // Get the redirect URL from the auth service\n      const redirectUrl = this.authService.redirectUrl || '/';\n      \n      // Reset the redirect URL\n      this.authService.redirectUrl = null;\n      \n      // Navigate to the redirect URL\n      this.router.navigate([redirectUrl]);\n    } else {\n      this.loginError = 'Invalid email or password';\n    }\n  }\n}\n","<!-- components/auth/login/login.component.html -->\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n      <div class=\"card mt-5\">\n        <div class=\"card-header bg-primary text-white\">\n          <h4 class=\"mb-0\">Login</h4>\n        </div>\n        <div class=\"card-body\">\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"mb-3\">\n              <label for=\"email\" class=\"form-label\">Email address</label>\n              <input \n                type=\"email\" \n                class=\"form-control\" \n                id=\"email\"\n                formControlName=\"email\"\n                placeholder=\"admin@example.com\"\n              >\n              <div class=\"text-danger\" *ngIf=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\">\n                Please enter a valid email address\n              </div>\n            </div>\n            \n            <div class=\"mb-3\">\n              <label for=\"password\" class=\"form-label\">Password</label>\n              <input \n                type=\"password\" \n                class=\"form-control\" \n                id=\"password\"\n                formControlName=\"password\"\n                placeholder=\"password\"\n              >\n              <div class=\"text-danger\" *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\">\n                Password is required\n              </div>\n            </div>\n            \n            <div class=\"alert alert-info\" role=\"alert\">\n              <strong>Demo Credentials:</strong><br>\n              Email: admin@example.com<br>\n              Password: password\n            </div>\n            \n            <div class=\"d-grid\">\n              <button \n                type=\"submit\" \n                class=\"btn btn-primary\"\n                [disabled]=\"loginForm.invalid\"\n              >\n                Login\n              </button>\n            </div>\n            \n            <div class=\"alert alert-danger mt-3\" *ngIf=\"loginError\">\n              {{ loginError }}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}